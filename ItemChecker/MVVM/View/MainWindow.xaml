<Window x:Class="ItemChecker.MVVM.View.MainWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:view="clr-namespace:ItemChecker.MVVM.View"
        xmlns:viewModel="clr-namespace:ItemChecker.MVVM.ViewModel"
        xmlns:customConverter="clr-namespace:ItemChecker.Converter"
        mc:Ignorable="d" x:Name="mainWindow"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        d:DataContext="{d:DesignInstance Type=viewModel:MainViewModel}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        Background="{DynamicResource Background}"
        TextElement.FontWeight="Normal"
        TextElement.FontSize="12"
        FontFamily="{materialDesign:MaterialDesignFont}"
        Title="ItemChecker" Height="710" Width="1300" MinHeight="540" MinWidth="955"
        WindowStartupLocation="CenterScreen" WindowStyle="None" ResizeMode="NoResize"
        Closing="Window_Closing">
    <Window.Resources>
        <Image x:Key="Icon" Source="../../Resources/ico.png"/>
        <ControlTemplate x:Key="ValidError"/>
        <DataTemplate DataType="{x:Type viewModel:HomeViewModel}">
            <view:BuyOrderView/>
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:ParserViewModel}">
            <view:ParserView />
        </DataTemplate>
        <DataTemplate DataType="{x:Type viewModel:RareViewModel}">
            <view:RareView />
        </DataTemplate>
        <customConverter:BooleanToColorConverter x:Key="BooleanToColorConverter"/>
        <customConverter:BooleanToNotificationIconConverter x:Key="BooleanToNotificationIconConverter"/>
    </Window.Resources>
    <Window.InputBindings>
        <KeyBinding Key="H" Modifiers="Shift" Command="{Binding MenuCommand}" CommandParameter="History"/>
        <KeyBinding Key="D" Modifiers="Shift" Command="{Binding MenuCommand}" CommandParameter="Details"/>
        <KeyBinding Key="C" Modifiers="Shift" Command="{Binding MenuCommand}" CommandParameter="Calculator"/>
        <KeyBinding Key="Esc" Command="{Binding MenuCommand}" CommandParameter="Exit"/>
    </Window.InputBindings>
    <Border BorderBrush="DimGray" BorderThickness="0.5">
        <Grid Margin="5 0 5 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="26"/>
                <RowDefinition/>
                <RowDefinition Height="25"/>
            </Grid.RowDefinitions>
            <!--top-->
            <Grid Background="{DynamicResource WindowTopBackground}" Margin="-5 0 -5 0"/>
            <Grid Grid.Row="0" Background="Transparent" MouseLeftButtonDown="Window_DragMove">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="235"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="170"/>
                </Grid.ColumnDefinitions>
                <StackPanel HorizontalAlignment="Left" Orientation="Horizontal" Grid.Column="0">
                    <Button x:Name="buttonItemChecker" ToolTip="Menu" VerticalAlignment="Center" Margin="1"
                            Style="{StaticResource MaterialDesignToolForegroundButton}"
                            Click="buttonItemChecker_Click" ContextMenuService.IsEnabled="false">
                        <materialDesign:PackIcon Kind="Menu"/>
                        <Button.ContextMenu>
                            <ContextMenu Style="{StaticResource MaterialDesignContextMenu}"
                                         FontSize="13" FontWeight="DemiBold" Background="{DynamicResource ElementBackground}">
                                <MenuItem Header="History" Command="{Binding MenuCommand}"
                                          CommandParameter="History" InputGestureText="Shift+H">
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon Kind="ChartBar"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Details" Command="{Binding MenuCommand}"
                                          CommandParameter="Details" InputGestureText="Shift+D">
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon Kind="Magnify"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Calculator" Command="{Binding MenuCommand}"
                                          CommandParameter="Calculator" InputGestureText="Shift+C">
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon Kind="Calculator"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Links">
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon Kind="Link"/>
                                    </MenuItem.Icon>
                                    <MenuItem Header="SteamMarket" Command="{Binding MenuCommand}"
                                              CommandParameter="SteamMarket"/>
                                    <MenuItem Header="MyInventory" Command="{Binding MenuCommand}"
                                              CommandParameter="MyInventory"/>
                                    <Separator/>
                                    <MenuItem Header="Cs.Money" Command="{Binding MenuCommand}"
                                              CommandParameter="Cs.Money"/>
                                    <MenuItem Header="Loot.Farm" Command="{Binding MenuCommand}"
                                              CommandParameter="Loot.Farm"/>
                                    <MenuItem Header="Buff163" Command="{Binding MenuCommand}"
                                              CommandParameter="Buff163"/>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Header="Settings" Command="{Binding MenuCommand}"
                                          CommandParameter="Settings">
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon Kind="Settings"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Exit" Command="{Binding MenuCommand}"
                                          CommandParameter="Exit" InputGestureText="Esc">
                                    <MenuItem.Icon>
                                        <materialDesign:PackIcon Kind="ExitToApp"/>
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </Button.ContextMenu>
                    </Button>
                    <Button Height="25" Style="{StaticResource MaterialDesignFlatButton}" Click="Home_Click" x:Name="Home">
                        <TextBlock Text="Home"/>
                    </Button>
                    <Button Height="25" Style="{StaticResource MaterialDesignFlatButton}" Click="Parser_Click" x:Name="Parser">
                        <TextBlock Text="Parser"/>
                    </Button>
                    <Button Height="25" Style="{StaticResource MaterialDesignFlatButton}" Click="Rare_Click" x:Name="Rare">
                        <TextBlock Text="Rare"/>
                    </Button>
                </StackPanel>
                <StackPanel Grid.Column="2" Margin="0 0 -5 0" HorizontalAlignment="Right" Orientation="Horizontal">
                    <Button Style="{StaticResource MaterialDesignFlatButton}" Click="MinWin_Click" VerticalAlignment="Center">
                        <materialDesign:PackIcon Kind="Minus"/>
                    </Button>
                    <Button Style="{StaticResource MaterialDesignFlatButton}" Click="Button_Close" VerticalAlignment="Center">
                        <materialDesign:PackIcon Kind="Close"/>
                    </Button>
                </StackPanel>
            </Grid>
            <!--body-->
            <Separator Grid.Row="1" Style="{StaticResource {x:Static ToolBar.SeparatorStyleKey}}" Width="1" HorizontalAlignment="Right" Margin="0 0 265 0"/>
            <ContentControl Grid.Row="1" x:Name="bodyContent" Content="{Binding}" Margin="10" />
            <!--footer-->
            <Border Grid.Row="2" Background="{DynamicResource ElementBackground}" Margin="-10 0 -10 0"
                    BorderThickness="0.5" BorderBrush="{DynamicResource Background}"/>
            <Grid Grid.Row="2" VerticalAlignment="Center">
                <TextBlock VerticalAlignment="Center">
                    <TextBlock.Text>
                        <MultiBinding StringFormat="All in: {0}$">
                            <Binding Path="MainInfo.AllIn" />
                        </MultiBinding>
                    </TextBlock.Text>
                </TextBlock>
                <Popup HorizontalAlignment="Right" x:Name="PopupNotification" StaysOpen="False" Width="270" Height="659" HorizontalOffset="1023" Closed="PopupNotification_Closed">
                    <Grid>
                        <Border Background="{DynamicResource ElementBackground}" BorderThickness="0.5" BorderBrush="{DynamicResource Background}">
                            <Grid Margin="5">
                                <Grid.RowDefinitions>
                                    <RowDefinition Height="32"/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <TextBlock Margin="5 0 0 0" Text="Notification Center" VerticalAlignment="Center" FontWeight="Bold" FontSize="14"/>
                                <Separator VerticalAlignment="Bottom"/>
                                <ListView Grid.Row="1" ItemsSource="{Binding MainInfo.Notifications}"
                                          x:Name="listNotifications" SelectionMode="Single" VerticalAlignment="Bottom">
                                    <ListView.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Width="220" TextWrapping="Wrap" Foreground="{Binding IsRead, Converter={StaticResource BooleanToColorConverter}}">
                                                <TextBlock.Text>
                                                    <MultiBinding StringFormat="&#x0a;{0}&#x0a;{1}&#x0a;&#x0a;{2:dd MMM yyyy, hh:mm tt}">
                                                        <Binding Path="Title"/>
                                                        <Binding Path="Message"/>
                                                        <Binding Path="Date"/>
                                                    </MultiBinding>
                                                </TextBlock.Text>
                                            </TextBlock>
                                        </DataTemplate>
                                    </ListView.ItemTemplate>
                                    <ListView.ItemContainerStyle>
                                        <Style TargetType="ListViewItem">
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </Style>
                                    </ListView.ItemContainerStyle>
                                </ListView>
                            </Grid>
                        </Border>
                    </Grid>
                </Popup>
                <Button Height="25" Style="{StaticResource MaterialDesignToolForegroundButton}"
                        ToolTip="Notifications" Click="Notification_Click" HorizontalAlignment="Right">
                    <materialDesign:PackIcon Kind="{Binding MainInfo.IsNotification, Converter={StaticResource BooleanToNotificationIconConverter}}"/>
                </Button>
            </Grid>
            <materialDesign:Snackbar x:Name="MyMessage" Grid.Row="1" MessageQueue="{Binding MainInfo.Message}"/>
        </Grid>
    </Border>
</Window>
