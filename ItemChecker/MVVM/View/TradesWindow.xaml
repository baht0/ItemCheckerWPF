<Window x:Class="ItemChecker.MVVM.View.TradesWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ItemChecker.MVVM.View"
        xmlns:lvc="clr-namespace:LiveCharts.Wpf;assembly=LiveCharts.Wpf"
        xmlns:viewmodel="clr-namespace:ItemChecker.MVVM.ViewModel"
        xmlns:customConverter="clr-namespace:ItemChecker.Converter"
        mc:Ignorable="d" x:Name="tradesWindow"
        Title="Trades" Height="550" Width="920"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        d:DataContext="{d:DesignInstance Type=viewmodel:TradesViewModel}"
        Background="{DynamicResource Background}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Normal"
        FontFamily="{materialDesign:MaterialDesignFont}"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None" ResizeMode="NoResize">
    <Window.Resources>
        <ControlTemplate x:Key="ValidError"/>
        <customConverter:ServiceIdToServiceNameConverter x:Key="ServiceIdToServiceNameConverter"/>
    </Window.Resources>
    <Border BorderBrush="Gray" BorderThickness="0.5">
        <Grid Margin="10 0 10 10">
            <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <Grid Background="{DynamicResource WindowTopBackground}" Margin="-10 0 -10 0"/>
            <!--top-->
            <Grid Grid.Row="0" MouseLeftButtonDown="Window_DragMove" Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Trades" VerticalAlignment="Center"/>
                <VirtualizingStackPanel Grid.Column="1" Margin="0 0 -10 0" Orientation="Horizontal" HorizontalAlignment="Right">
                    <Button Click="Calculator_Click" VerticalAlignment="Center" Style="{StaticResource MaterialDesignToolForegroundButton}">
                        <materialDesign:PackIcon Kind="Calculator"/>
                    </Button>
                    <Button Click="Button_Close" VerticalAlignment="Center" Style="{StaticResource MaterialDesignFlatButton}">
                        <materialDesign:PackIcon Kind="Close"/>
                    </Button>
                </VirtualizingStackPanel>
            </Grid>
            <!--body-->
            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <materialDesign:ColorZone Background="Transparent" Grid.Row="0">
                    <StackPanel Orientation="Horizontal" Margin="2" HorizontalAlignment="Center">
                        <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}" x:Name="tradesTab" Width="450" Margin="1" Content="Trades" IsChecked="True"/>
                        <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}" x:Name="analysisTab" Width="450" Margin="1" Content="Analysis"/>
                    </StackPanel>
                </materialDesign:ColorZone>
                <Border Grid.Row="1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Margin="5">
                    <Grid>
                        <!--trades-->
                        <Grid Grid.Row="1" Visibility="{Binding IsChecked, ElementName=tradesTab, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="32"/>
                                <RowDefinition/>
                                <RowDefinition Height="55"/>
                            </Grid.RowDefinitions>
                            <VirtualizingStackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                                <TextBlock VerticalAlignment="Center" FontWeight="Bold" FontSize="14"
                                           Text="{Binding Trades.List.Count, StringFormat='Trades: {0}'}"/>
                                <Button Style="{StaticResource MaterialDesignToolForegroundButton}" HorizontalAlignment="Left" Command="{Binding ClearCommand}">
                                    <materialDesign:PackIcon Kind="Delete"/>
                                </Button>
                            </VirtualizingStackPanel>
                            <ComboBox Grid.Column="2" Width="60" x:Name="currency" HorizontalAlignment="Right"
                                      ToolTip="Displaying prices in tables" VerticalAlignment="Center"
                                      ItemsSource="{Binding Trades.CurrencyList}" SelectedIndex="{Binding Trades.CurrencyId}"
                                      SelectionChanged="currency_SelectionChanged"/>
                            <Separator Grid.ColumnSpan="3" VerticalAlignment="Bottom"/>
                            <DataGrid Grid.Row="1" Grid.ColumnSpan="3" AlternationCount="2" AlternatingRowBackground="{DynamicResource ElementBackground}"
                                      AutoGenerateColumns="False" x:Name="tradesGrid" SelectionMode="Single" FontSize="12" ToolTip="Press 'Backspace' to remove item"
                                      ItemsSource="{Binding Trades.List, UpdateSourceTrigger=PropertyChanged}" KeyDown="tradesGrid_KeyDown"
                                      SelectedItem="{Binding Trades.SelectedItem}" MouseDoubleClick="DataGrid_MouseDoubleClick"
                                      IsReadOnly="True" CanUserReorderColumns="False" CanUserResizeRows="False" CanUserResizeColumns="False">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Item" Binding="{Binding ItemName}" MinWidth="320"/>
                                    <DataGridTextColumn Header="Deposite Date" Binding="{Binding Date, StringFormat='{}{0:dd MMM yy}'}" Width="auto"/>
                                    <DataGridTextColumn Header="Purchase" Binding="{Binding Purchase}" Width="auto"/>
                                    <DataGridTextColumn Header="Get" Binding="{Binding Get}" Width="auto"/>
                                    <DataGridTextColumn Header="Precent" Binding="{Binding Precent}" Width="auto"/>
                                    <DataGridTextColumn Header="Difference" Binding="{Binding Difference}" Width="auto"/>
                                    <DataGridTextColumn Header="Count" Binding="{Binding Count, StringFormat='x{0}'}" Width="auto"/>
                                </DataGrid.Columns>
                            </DataGrid>
                            <GroupBox Header="Add Trade" Grid.Row="2" Grid.ColumnSpan="3" Style="{DynamicResource none}" BorderThickness="0.5">
                                <Grid Margin="5">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition Width="80"/>
                                        <ColumnDefinition Width="10"/>
                                        <ColumnDefinition Width="80"/>
                                        <ColumnDefinition Width="10"/>
                                        <ColumnDefinition Width="50"/>
                                        <ColumnDefinition Width="95"/>
                                        <ColumnDefinition Width="35"/>
                                    </Grid.ColumnDefinitions>
                                    <TextBox Grid.Column="0" Margin="5 0 5 0" Grid.Row="1"
                                             Text="{Binding Trades.AddItem.ItemName}" VerticalAlignment="Center"
                                             ToolTip="ItemName" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                                    <TextBox Grid.Column="1" Margin="5 0 5 0" Grid.Row="1" TextInput="InputDecimal"
                                             Text="{Binding Trades.AddItem.Purchase}" VerticalAlignment="Center"
                                             ToolTip="Purchase (USD)" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                                    <TextBlock Grid.Column="2" Text="$" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                    <TextBox Grid.Column="3" Margin="5 0 5 0" Grid.Row="1" TextInput="InputDecimal"
                                             Text="{Binding Trades.AddItem.Get}" VerticalAlignment="Center"
                                             ToolTip="Get (USD)" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                                    <TextBlock Grid.Column="4" Text="$" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                    <TextBox Grid.Column="5" Margin="5 0 5 0" Grid.Row="1" TextInput="InputDecimal"
                                             Text="{Binding Trades.AddItem.Count}" VerticalAlignment="Center" TextAlignment="Center"
                                             ToolTip="Count" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                                    <DatePicker Grid.Column="6" Margin="5 0 5 0" SelectedDate="{Binding Trades.AddItem.Date}" ToolTip="Deposite Date"/>
                                    <Button Grid.Column="7" Grid.Row="1" VerticalAlignment="Center" Margin="5 0 5 0"
                                            Style="{StaticResource MaterialDesignToolForegroundButton}" ToolTip="Add"
                                            Command="{Binding AddCommand}" CommandParameter="{Binding Trades.AddItem}">
                                        <materialDesign:PackIcon Kind="Add"/>
                                    </Button>
                                </Grid>
                            </GroupBox>
                        </Grid>
                        <!--analysis-->
                        <Grid Grid.Row="1" Visibility="{Binding IsChecked, ElementName=analysisTab, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="32"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock VerticalAlignment="Center" FontWeight="Bold" FontSize="14"
                                           Text="{Binding Analysis.Result.Count, StringFormat='Count: {0}'}"/>
                            <Separator Grid.ColumnSpan="3" VerticalAlignment="Bottom"/>
                            <Grid Grid.Row="1" Margin="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="150"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <!--config-->
                                <Grid Grid.Column="0">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="120"/>
                                        <RowDefinition Height="60"/>
                                        <RowDefinition Height="135"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <GroupBox Grid.Row="0" Header="Interval" Style="{DynamicResource none}" BorderThickness="0.5">
                                        <Grid Margin="5">
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <ComboBox Grid.Row="0" ItemsSource="{Binding Analysis.Dateinterval}" SelectedIndex="0"
                                                      VerticalAlignment="Center" x:Name="dateintervalComboBox" SelectionChanged="dateintervalComboBox_SelectionChanged"/>
                                            <DatePicker Grid.Row="1" x:Name="dateFrom" ToolTip="From" SelectedDate="{Binding Analysis.DateFrom}" SelectedDateChanged="dateInterval_SelectedDateChanged"/>
                                            <DatePicker Grid.Row="2" x:Name="dateTo" ToolTip="To" SelectedDate="{Binding Analysis.DateTo}" SelectedDateChanged="dateInterval_SelectedDateChanged"/>
                                        </Grid>
                                    </GroupBox>
                                    <GroupBox Grid.Row="1" Header="Starting balance" Style="{DynamicResource none}" BorderThickness="0.5">
                                        <Grid Margin="5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition Width="15"/>
                                            </Grid.ColumnDefinitions>
                                            <TextBox Text="{Binding Analysis.StartBalance}" VerticalAlignment="Center" x:Name="balanceTextBox"/>
                                            <TextBlock Grid.Column="1" Text="$" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                                        </Grid>
                                    </GroupBox>
                                    <GroupBox Grid.Row="2" Header="Result" Style="{DynamicResource none}" BorderThickness="0.5">
                                        <Grid Margin="5">
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <TextBlock Grid.Row="0" Text="{Binding Analysis.Result.AvgBalance, StringFormat='Balance avg: {0}$'}" TextWrapping="Wrap"/>
                                            <TextBlock Grid.Row="1" Text="{Binding Analysis.Result.StartBalance, StringFormat='Balance start: {0}$'}" TextWrapping="Wrap"/>
                                            <TextBlock Grid.Row="2" Text="{Binding Analysis.Result.EndBalance, StringFormat='Balance end: {0}$'}" TextWrapping="Wrap"/>
                                            <TextBlock Grid.Row="3" Text="{Binding Analysis.Result.Difference, StringFormat='Difference: {0}$'}" TextWrapping="Wrap"/>
                                            <TextBlock Grid.Row="4" Text="{Binding Analysis.Result.Precent, StringFormat='Precent: {0}%'}" TextWrapping="Wrap"/>
                                        </Grid>
                                    </GroupBox>
                                    <Button Grid.Row="3" Grid.Column="1" Content="Apply" VerticalAlignment="Bottom"
                                            Style="{StaticResource MaterialDesignFlatButton}"
                                            Command="{Binding ApplyCommand}" CommandParameter="{Binding Analysis}"/>
                                </Grid>
                                <!--LiveChart-->
                                <Grid Grid.Column="1" Margin="15 0 0 0" Background="{DynamicResource ElementBackground}">
                                    <TextBlock Text="Order of execution.&#x0a;&#x0a;1. Select an interval.&#x0a;2. Write down the starting balance.&#x0a;3. Press down 'Apply'."
                                               VerticalAlignment="Center" HorizontalAlignment="Center" TextWrapping="Wrap" FontStyle="Italic" FontSize="14"/>
                                </Grid>
                                <Grid Grid.Column="1" Margin="15 0 0 0" Background="{DynamicResource ElementBackground}" Visibility="{Binding Analysis.Result.IsLiveChart, Converter={StaticResource BooleanToVisibilityConverter}}">
                                    <lvc:CartesianChart Grid.Column="1" Margin="15 0 0 0" Series="{Binding Analysis.Series}" BorderThickness="0" LegendLocation="Top">
                                        <lvc:CartesianChart.DataTooltip>
                                            <lvc:DefaultTooltip Background="{DynamicResource Background}"/>
                                        </lvc:CartesianChart.DataTooltip>
                                        <lvc:CartesianChart.SeriesColors>
                                            <lvc:ColorsCollection>
                                                <Color>#2195f2</Color>
                                                <Color>#f5b342</Color>
                                            </lvc:ColorsCollection>
                                        </lvc:CartesianChart.SeriesColors>
                                        <lvc:CartesianChart.AxisY>
                                            <lvc:Axis ShowLabels="True" FontSize="12" x:Name="YLabel">
                                                <lvc:Axis.Separator>
                                                    <lvc:Separator StrokeThickness="0"/>
                                                </lvc:Axis.Separator>
                                                <lvc:Axis.Sections>
                                                    <lvc:AxisSection Value="0" StrokeThickness="1" Stroke="#ff6e6e">
                                                        <lvc:AxisSection.Fill>
                                                            <SolidColorBrush Color="#A3A3FF" Opacity="0"/>
                                                        </lvc:AxisSection.Fill>
                                                    </lvc:AxisSection>
                                                </lvc:Axis.Sections>
                                            </lvc:Axis>
                                        </lvc:CartesianChart.AxisY>
                                        <lvc:CartesianChart.AxisX>
                                            <lvc:Axis FontSize="12" x:Name="XLabel" Labels="{Binding Analysis.Labels, StringFormat='{}{0}'}">
                                                <lvc:Axis.Separator>
                                                    <lvc:Separator StrokeThickness="0"/>
                                                </lvc:Axis.Separator>
                                            </lvc:Axis>
                                        </lvc:CartesianChart.AxisX>
                                    </lvc:CartesianChart>
                                </Grid>
                            </Grid>
                        </Grid>
                    </Grid>
                </Border>
            </Grid>
            <materialDesign:Snackbar Grid.Row="1" MessageQueue="{Binding Message}" />
        </Grid>
    </Border>
</Window>
