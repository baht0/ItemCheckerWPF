<UserControl x:Class="ItemChecker.MVVM.View.BuyOrderView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ItemChecker.MVVM.View"
             xmlns:viewmodel="clr-namespace:ItemChecker.MVVM.ViewModel" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:customConverter="clr-namespace:ItemChecker.Converter"
             d:DataContext="{d:DesignInstance Type=viewmodel:HomeViewModel}"
             FontFamily="{materialDesign:MaterialDesignFont}"
             mc:Ignorable="d"
             d:DesignHeight="660" d:DesignWidth="1280" x:Name="userControl">
    <UserControl.Resources>
        <ControlTemplate x:Key="ValidError"/>
        <customConverter:BooleanToPlayButtonConverter x:Key="BooleanToPlayButtonConverter"/>
        <customConverter:TradeLockConverter x:Key="TradeLockConverter"/>
        <customConverter:IntToVisibilityConverter x:Key="IntToVisibilityConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="250"/>
        </Grid.ColumnDefinitions>
        <!--body-->
        <Grid Grid.Column="0" Margin="0 0 10 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock Text="{Binding DataGridOrders.Items.Count, StringFormat='My Buy Orders: {0}'}" 
                       VerticalAlignment="Center" FontSize="18"/>
            <VirtualizingStackPanel Grid.Row="0" Background="Transparent" HorizontalAlignment="Right"
                                    Orientation="Horizontal" VirtualizationMode="Recycling">
                <Button ToolTip="Update orders" Style="{StaticResource MaterialDesignToolForegroundButton}"
                        Command="{Binding OrdersCommand}" CommandParameter="0" VerticalAlignment="Center">
                    <materialDesign:PackIcon Kind="Reload"/>
                </Button>
                <Button ToolTip="Cancel all orders" Style="{StaticResource MaterialDesignToolForegroundButton}"
                        Command="{Binding OrdersCommand}" CommandParameter="1" VerticalAlignment="Center">
                    <materialDesign:PackIcon Kind="Delete"/>
                </Button>
            </VirtualizingStackPanel>
            <DataGrid x:Name="ordersGrid" Grid.Row="1" AlternationCount="2" AlternatingRowBackground="{DynamicResource ElementBackground}"
                      AutoGenerateColumns="False" ToolTip="Press 'Backspace' to cancel order"
                      ItemsSource="{Binding DataGridOrders.Items, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding DataGridOrders.SelectedItem}"
                      KeyDown="DataGrid_KeyDown" SelectionMode="Single" MouseDoubleClick="DataGrid_MouseDoubleClick"
                      IsReadOnly="True" CanUserReorderColumns="False" CanUserResizeRows="False" CanUserResizeColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Item" Binding="{Binding ItemName}" CanUserResize="False" Width="auto" MaxWidth="400" MinWidth="320"/>
                    <DataGridTextColumn Binding="{Binding OrderPrice}" CanUserResize="False" Width="auto" FontWeight="Bold">
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{Binding DataContext.Home.CurrencySteamSymbol, RelativeSource={RelativeSource AncestorType=UserControl}, StringFormat='BuyOrder ({0})'}"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Price" Binding="{Binding ServicePrice}" CanUserResize="False" Width="auto"/>
                    <DataGridTextColumn Header="Get" Binding="{Binding ServiceGive}" CanUserResize="False" Width="auto"/>
                    <DataGridTextColumn Header="Precent" Binding="{Binding Precent, StringFormat='{}{0}%'}" CanUserResize="False" Width="auto" FontWeight="Bold"/>
                    <DataGridTextColumn Header="Difference" Binding="{Binding Difference}" CanUserResize="False" Width="auto" MaxWidth="110"/>
                </DataGrid.Columns>
            </DataGrid>
            <Grid Grid.Row="1" Background="Transparent" Visibility="{Binding DataGridOrders.IsBusy, Converter={StaticResource BooleanToVisibilityConverter}}">
                <ProgressBar VerticalAlignment="Center" HorizontalAlignment="Center" IsIndeterminate="True" Style="{StaticResource MaterialDesignCircularProgressBar}"/>
            </Grid>
        </Grid>
        <!--panel-->
        <Grid Grid.Column="1" HorizontalAlignment="Center">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <materialDesign:ColorZone Background="Transparent" Grid.Row="0">
                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}" x:Name="pushTab" Width="124" Margin="1" Content="Push" IsChecked="True"/>
                    <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}" x:Name="inventoryTab" Width="124" Margin="1" Content="Inventory"/>
                </StackPanel>
            </materialDesign:ColorZone>
            <Border Grid.Row="1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Margin="5">
                <Grid>
                    <!--push-->
                    <Grid Visibility="{Binding IsChecked, ElementName=pushTab, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="32"/>
                            <RowDefinition Height="95"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock VerticalAlignment="Center" FontWeight="Bold" Grid.ColumnSpan="2">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Check: {0} | Pushed: {1}">
                                    <Binding Path="PushTool.Check"/>
                                    <Binding Path="PushTool.Count"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <Button ToolTip="Reserve items" HorizontalAlignment="Right" Style="{StaticResource MaterialDesignToolForegroundButton}"
                                Click="ListShow_Click" IsEnabled="{Binding PushTool.IsService, Converter={StaticResource InvertBooleanConverter}}">
                            <materialDesign:PackIcon Kind="FormatListBulleted"/>
                        </Button>
                        <Separator Grid.ColumnSpan="2" VerticalAlignment="Bottom" Height="3"/>
                        <!--body-->
                        <Grid Grid.Row="1" Margin="2" IsEnabled="{Binding PushTool.IsService, Converter={StaticResource InvertBooleanConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="110"/>
                                <ColumnDefinition Width="75"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="Service:" VerticalAlignment="Center"/>
                            <ComboBox Grid.Column="1" Grid.ColumnSpan="2" VerticalAlignment="Center" x:Name="serviceCmb" SelectionChanged="serviceCmb_SelectionChanged"
                                      ItemsSource="{Binding Home.Services}" SelectedIndex="{Binding PushTool.ServiceId}"/>

                            <TextBlock Grid.Row="1" Text="Min. Precent:" VerticalAlignment="Center"/>
                            <TextBox Grid.Row="1" Grid.Column="1" VerticalAlignment="Center" ToolTip="Cancel order less than" x:Name="minPrecentTxt"
                                     Text="{Binding PushTool.MinPrecent}" TextInput="InputInt" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                            <TextBlock Grid.Row="1" Grid.Column="2" Text="%" Height="15" VerticalAlignment="Center"/>

                            <TextBlock Grid.Row="2" Grid.ColumnSpan="3" Text="Every 5th check the program will place an order from the Reserve list."
                                       TextWrapping="Wrap" FontStyle="Italic" VerticalAlignment="Bottom"/>
                        </Grid>
                        <!--bottom-->
                        <Grid Grid.Row="2" VerticalAlignment="Bottom">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="60"/>
                            </Grid.ColumnDefinitions>

                            <VirtualizingStackPanel Orientation="Horizontal">
                                <TextBlock VerticalAlignment="Center" Text="Timer: "/>
                                <TextBlock VerticalAlignment="Center" Text="{Binding PushTool.StatusStr}" Cursor="Hand"
                                           PreviewMouseDown="TimerPush_PreviewMouseDown" Visibility="{Binding PushTool.IsService, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                                <StackPanel Orientation="Horizontal" Margin="5 0 0 0" Visibility="{Binding PushTool.IsService, Converter={StaticResource InverseBoolToVisConverter}}">
                                    <TextBox Width="50" Text="{Binding PushTool.TimeMin}" PreviewTextInput="InputInt"
                                             VerticalAlignment="Center" HorizontalAlignment="Right"/>
                                    <TextBlock Text="min." VerticalAlignment="Center"/>
                                </StackPanel>
                            </VirtualizingStackPanel>

                            <Button Grid.Row="1" Grid.Column="2" HorizontalAlignment="Right" Style="{StaticResource MaterialDesignFlatButton}"
                                    Command="{Binding PushCommand}" CommandParameter="{Binding PushTool}">
                                <materialDesign:PackIcon Kind="{Binding PushTool.IsService, Converter={StaticResource BooleanToPlayButtonConverter}}"/>
                            </Button>
                            <ProgressBar Grid.Row="1" Grid.ColumnSpan="3" VerticalAlignment="Bottom" Height="3" Style="{StaticResource MaterialDesignLinearProgressBar}"
                                         Maximum="{Binding PushTool.MaxProgress}" Value="{Binding PushTool.Progress}"/>
                        </Grid>
                    </Grid>
                    <!--Inventory-->
                    <Grid Visibility="{Binding IsChecked, ElementName=inventoryTab, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="32"/>
                            <RowDefinition/>
                            <RowDefinition Height="32"/>
                        </Grid.RowDefinitions>
                        <TextBlock VerticalAlignment="Center" FontWeight="Bold">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="Items: {0} | {1}$">
                                    <Binding Path="InventoryTool.Items.Count"/>
                                    <Binding Path="InventoryTool.SumOfItems"/>
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <Button ToolTip="Refresh Inventory" HorizontalAlignment="Right"
                                Style="{StaticResource MaterialDesignToolForegroundButton}"
                                Command="{Binding UpdateInventoryCommand}">
                            <materialDesign:PackIcon Kind="Reload"/>
                        </Button>
                        <Separator VerticalAlignment="Bottom"/>
                        <!--top-->
                        <Grid Grid.Row="1" Height="520" VerticalAlignment="Top">
                            <TextBlock Text="Click the 'Refresh Inventory' button to load the items." TextWrapping="Wrap" TextAlignment="Center"
                                       VerticalAlignment="Center" HorizontalAlignment="Center" FontStyle="Italic"/>
                        </Grid>
                        <Grid Grid.Row="1" Visibility="{Binding InventoryTool.Items.Count, Converter={StaticResource IntToVisibilityConverter}}"
                              x:Name="inventoryGrid" Height="510" VerticalAlignment="Top">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="105"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <!--info-->
                            <GroupBox Grid.Row="0" Style="{x:Null}" BorderThickness="0.5" Margin="5">
                                <GroupBox.Header>
                                    <TextBlock Text="{Binding InventoryTool.SelectedItem.Data.Count, StringFormat='Count: {0}'}"/>
                                </GroupBox.Header>
                                <Grid Margin="1">
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="45"/>
                                        <RowDefinition Height="25"/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Grid.Row="0" VerticalAlignment="Center" TextWrapping="Wrap" Text="{Binding InventoryTool.SelectedItem.ItemName}"/>
                                    <TextBlock Grid.Row="1" VerticalAlignment="Center" FontWeight="Bold"
                                               Text="{Binding InventoryTool.SelectedItem.Data[0].TradeLock, StringFormat='TradeLock: {0}', Converter={StaticResource TradeLockConverter}}"/>
                                </Grid>
                            </GroupBox>
                            <ListBox Grid.Row="1" KeyDown="inventoryListBox_KeyDown" Background="{DynamicResource ElementBackground}"
                                     ItemsSource="{Binding InventoryTool.Items}" SelectedItem="{Binding InventoryTool.SelectedItem}"
                                     x:Name="inventoryListBox" MouseDoubleClick="inventoryListBox_MouseDoubleClick" ToolTip="'Double Click' to show item in inventory">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding ItemName}"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Grid>
                        <!--sell-->
                        <GroupBox Grid.Row="1" Style="{DynamicResource none}" VerticalAlignment="Bottom" Height="110" Header="Sell:" x:Name="sellGroup" BorderThickness="0.5">
                            <Grid Margin="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <RadioButton Grid.Row="0" Grid.Column="0" Content="All available" x:Name="allAvailable" Checked="allAvailable_Checked"
                                             IsChecked="{Binding InventoryTool.AllAvailable}"/>
                                <RadioButton Grid.Row="0" Grid.Column="1" Content="Selected only" x:Name="selectedOnly" Checked="selectedOnly_Checked"
                                             IsChecked="{Binding InventoryTool.SelectedOnly}"/>
                                <TextBlock Grid.Row="1" Text="Selling price:" VerticalAlignment="Center"/>
                                <ComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{Binding InventoryTool.SellingPrice}" x:Name="priceCombox"
                                          SelectedIndex="{Binding InventoryTool.SellingPriceId}" SelectionChanged="priceCombox_SelectionChanged"/>
                                <TextBlock Grid.Row="2" Text="{Binding Home.CurrencySteamSymbol, StringFormat='Price ({0}):'}" VerticalAlignment="Center"/>
                                <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding InventoryTool.Price}" VerticalAlignment="Center" x:Name="sellPrice"
                                         Validation.ErrorTemplate="{StaticResource ValidError}"/>
                            </Grid>
                        </GroupBox>
                        <!--buttom-->
                        <Grid Grid.Row="3" VerticalAlignment="Bottom">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="50"/>
                            </Grid.ColumnDefinitions>
                            <ComboBox VerticalAlignment="Center" ItemsSource="{Binding InventoryTool.Tasks}" SelectedIndex="{Binding InventoryTool.TaskId}"
                                      SelectionChanged="inventComboBox_SelectionChanged" x:Name="invenTasks"/>
                            <Button Grid.Row="0" Grid.Column="2" HorizontalAlignment="Right" Style="{StaticResource MaterialDesignFlatButton}"
                                    Command="{Binding InventoryTaskCommand}">
                                <materialDesign:PackIcon Kind="{Binding InventoryTool.IsService, Converter={StaticResource BooleanToPlayButtonConverter}}"/>
                            </Button>
                            <ProgressBar Grid.ColumnSpan="3" VerticalAlignment="Bottom" Height="3" Style="{StaticResource MaterialDesignLinearProgressBar}"
                                         Maximum="{Binding InventoryTool.MaxProgress}" Value="{Binding InventoryTool.Progress}"/>
                        </Grid>
                    </Grid>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</UserControl>