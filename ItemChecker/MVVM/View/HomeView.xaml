<UserControl x:Class="ItemChecker.MVVM.View.BuyOrderView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ItemChecker.MVVM.View"
             xmlns:viewmodel="clr-namespace:ItemChecker.MVVM.ViewModel" 
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:customConverter="clr-namespace:ItemChecker.Converter"
             d:DataContext="{d:DesignInstance Type=viewmodel:HomeViewModel}"
             FontFamily="{materialDesign:MaterialDesignFont}"
             mc:Ignorable="d"
             d:DesignHeight="660" d:DesignWidth="1280" x:Name="userControl">
    <UserControl.Resources>
        <ControlTemplate x:Key="ValidError"/>
        <customConverter:BooleanToPlayButtonConverter x:Key="BooleanToPlayButtonConverter"/>
        <customConverter:TradeLockConverter x:Key="TradeLockConverter"/>
        <customConverter:IntToVisibilityConverter x:Key="IntToVisibilityConverter"/>
    </UserControl.Resources>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="250"/>
        </Grid.ColumnDefinitions>
        <!--body-->
        <Grid Grid.Column="0" Margin="0 0 10 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <TextBlock Text="{Binding HomeTable.OrderedGrid.Count, StringFormat='My Buy Orders: {0}'}" 
                       VerticalAlignment="Center" FontSize="18"/>
            <VirtualizingStackPanel Grid.Row="0" Background="Transparent" HorizontalAlignment="Right"
                                    Orientation="Horizontal" VirtualizationMode="Recycling">
                <Button Style="{StaticResource MaterialDesignToolForegroundButton}"
                        Command="{Binding OrdersCommand}"
                        CommandParameter="0" VerticalAlignment="Center"
                        ToolTip="Update orders">
                    <materialDesign:PackIcon Kind="Reload"/>
                </Button>
                <Button Style="{StaticResource MaterialDesignToolForegroundButton}"
                        Command="{Binding OrdersCommand}"
                        CommandParameter="1" VerticalAlignment="Center"
                        ToolTip="Cancel all orders">
                    <materialDesign:PackIcon Kind="Delete"/>
                </Button>
            </VirtualizingStackPanel>            
            <DataGrid x:Name="ordersGrid" Grid.Row="1" AlternationCount="2" AlternatingRowBackground="{DynamicResource ElementBackground}"
                      AutoGenerateColumns="False" ToolTip="Press 'Backspace' to cancel order"
                      ItemsSource="{Binding HomeTable.OrderedGrid, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding HomeTable.SelectedOrderItem}"
                      KeyDown="DataGrid_KeyDown" SelectionMode="Single" MouseDoubleClick="DataGrid_MouseDoubleClick"
                      IsReadOnly="True" CanUserReorderColumns="False" CanUserResizeRows="False" CanUserResizeColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Header="Item" Binding="{Binding ItemName}" CanUserResize="False" Width="auto" MaxWidth="400" MinWidth="320"/>
                    <DataGridTextColumn Header="Sale" Binding="{Binding SteamPrice}" CanUserResize="False" Width="auto"/>
                    <DataGridTextColumn Header="BuyOrder" Binding="{Binding OrderPrice}" CanUserResize="False" Width="auto"/>
                    <DataGridTextColumn Header="Price" Binding="{Binding ServicePrice}" CanUserResize="False" Width="auto"/>
                    <DataGridTextColumn Header="Get" Binding="{Binding ServiceGive}" CanUserResize="False" Width="auto"/>
                    <DataGridTextColumn Header="Precent" Binding="{Binding Precent}" CanUserResize="False" Width="auto"/>
                    <DataGridTextColumn Header="Difference" Binding="{Binding Difference}" CanUserResize="False" Width="auto" MaxWidth="110"/>
                </DataGrid.Columns>
            </DataGrid>
        </Grid>
        <!--panel-->
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <materialDesign:ColorZone Background="Transparent" Grid.Row="0">
                <StackPanel Orientation="Horizontal" Margin="2" HorizontalAlignment="Center">
                    <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}" x:Name="orderTab" Width="124" Margin="1" Content="Order" IsChecked="True"/>
                    <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}" x:Name="inventoryTab" Width="124" Margin="1" Content="Inventory"/>
                </StackPanel>
            </materialDesign:ColorZone>
            <Border Grid.Row="1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Margin="10">
                <Grid>
                    <!--order-->
                    <Grid Visibility="{Binding IsChecked, ElementName=orderTab, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="32"/>
                            <RowDefinition Height="140"/>
                            <RowDefinition Height="*"/>
                        </Grid.RowDefinitions>
                        <TextBlock VerticalAlignment="Center" FontWeight="Bold" Grid.ColumnSpan="2"
                                       PreviewMouseDown="TimerPush_PreviewMouseDown"
                                       Text="{Binding HomePush.Check, StringFormat='Check: {0}'}"/>
                        <Button HorizontalAlignment="Right" ToolTip="Favorite Items"
                                Style="{StaticResource MaterialDesignToolForegroundButton}" Click="ListShow_Click">
                            <materialDesign:PackIcon Kind="FormatListBulleted"/>
                        </Button>
                        <Separator Grid.ColumnSpan="2" VerticalAlignment="Bottom" Height="3"/>
                        <!--body-->
                        <Grid Grid.Row="1" Margin="2">
                            <!--main-->
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="110"/>
                                <ColumnDefinition Width="75"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>

                            <TextBlock Text="Timer:" VerticalAlignment="Center"/>
                            <TextBox Grid.Column="1" Text="{Binding HomePush.Time}" PreviewTextInput="Number_PreviewTextInput" VerticalAlignment="Center"/>
                            <TextBlock Grid.Column="2" Text="Min." VerticalAlignment="Center"/>

                            <TextBlock Grid.Row="1" Text="Reserve:" VerticalAlignment="Center"/>
                            <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding HomePush.Reserve}"
                                         PreviewTextInput="Number_PreviewTextInput" VerticalAlignment="Center"
                                         ToolTip="This value is added to the min. percent (Favorite Items)"/>
                            <TextBlock Grid.Row="1" Grid.Column="2" Text="%" VerticalAlignment="Center"/>

                            <CheckBox Grid.Row="2" Grid.ColumnSpan="2"
                                          Content="Clean up unwanted items"
                                          ToolTip="Triggered during a push"
                                          IsChecked="{Binding HomePush.Unwanted}"/>

                            <TextBlock Grid.Row="3" Text="Pushed:" VerticalAlignment="Center"/>
                            <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding HomePush.Push}" VerticalAlignment="Center"/>
                        </Grid>
                        <!--progress-->
                        <Grid Grid.Row="2" VerticalAlignment="Bottom">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="60"/>
                            </Grid.ColumnDefinitions>
                            <TextBlock VerticalAlignment="Center" PreviewMouseDown="TimerPush_PreviewMouseDown"
                                       Text="{Binding HomePush.Status, StringFormat='Timer: {0}'}"/>
                            <Button Grid.Column="1" HorizontalAlignment="Right"
                                            Style="{StaticResource MaterialDesignFlatButton}"
                                            Command="{Binding PushCommand}"
                                            CommandParameter="{Binding HomePush}">
                                <materialDesign:PackIcon Kind="{Binding HomePush.IsService, Converter={StaticResource BooleanToPlayButtonConverter}}"/>
                            </Button>
                            <ProgressBar Grid.ColumnSpan="2" VerticalAlignment="Bottom"
                                                 Height="3" Style="{StaticResource MaterialDesignLinearProgressBar}"
                                                 Maximum="{Binding HomePush.MaxProgress}"
                                                 Value="{Binding HomePush.Progress}"/>
                        </Grid>
                    </Grid>
                    <!--Inventory-->
                    <Grid Visibility="{Binding IsChecked, ElementName=inventoryTab, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="32"/>
                            <RowDefinition/>
                            <RowDefinition Height="110"/>
                            <RowDefinition Height="35"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="{Binding HomeInventoryInfo.Items.Count, StringFormat='Steam Inventory: {0}'}" VerticalAlignment="Center" FontWeight="Bold"/>
                        <Button ToolTip="Refresh Inventory" HorizontalAlignment="Right"
                                Style="{StaticResource MaterialDesignToolForegroundButton}"
                                Command="{Binding UpdateInformationsCommand}">
                            <materialDesign:PackIcon Kind="Reload"/>
                        </Button>
                        <Separator VerticalAlignment="Bottom"/>
                        <!--info-->
                        <Grid Grid.Row="1">
                            <TextBlock Text="Click the 'Refresh Inventory' button to load the items." TextWrapping="Wrap" TextAlignment="Center"
                                       VerticalAlignment="Center" HorizontalAlignment="Center" FontStyle="Italic"/>
                        </Grid>
                        <Grid Grid.Row="1" Visibility="{Binding HomeInventoryInfo.Items.Count, Converter={StaticResource IntToVisibilityConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="45"/>
                                <RowDefinition Height="25"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <!--list-->
                            <TextBlock Grid.Row="0" VerticalAlignment="Center" TextWrapping="Wrap"
                                       Text="{Binding SelectedInventory.ItemName, StringFormat='Item: {0}'}"/>
                            <TextBlock Grid.Row="1" VerticalAlignment="Center"
                                       Text="{Binding SelectedInventory.TradeLock, StringFormat='TradeLock: {0}', Converter={StaticResource TradeLockConverter}}"/>
                            <ListBox Grid.Row="2" KeyDown="inventoryListBox_KeyDown" Background="{DynamicResource ElementBackground}"
                                     ItemsSource="{Binding HomeInventoryInfo.Items}" SelectedItem="{Binding SelectedInventory}"
                                     x:Name="inventoryListBox" MouseDoubleClick="inventoryListBox_MouseDoubleClick"
                                     ToolTip="'Double Click' show item in inventory">
                                <ListBox.ItemTemplate>
                                    <DataTemplate>
                                        <TextBlock Text="{Binding ItemName}"/>
                                    </DataTemplate>
                                </ListBox.ItemTemplate>
                            </ListBox>
                        </Grid>
                        <!--sell-->
                        <GroupBox Grid.Row="2" Style="{DynamicResource none}" Header="Sell:" x:Name="sellGroup" BorderThickness="0.5">
                            <Grid Margin="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <RadioButton Grid.Row="0" Grid.Column="0" Content="All available" IsChecked="{Binding HomeInventoryConfig.AllAvailable}"/>
                                <RadioButton Grid.Row="0" Grid.Column="1" Content="Selected only" IsChecked="{Binding HomeInventoryConfig.SelectedOnly}"/>
                                <TextBlock Grid.Row="1" Text="Selling price:" VerticalAlignment="Center"/>
                                <ComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{Binding HomeInventoryConfig.SellingPrice}" SelectedIndex="{Binding HomeInventoryConfig.SellingPriceId}"/>
                                <TextBlock Grid.Row="2" Text="Sum:" VerticalAlignment="Center"/>
                                <TextBlock Grid.Row="2" Grid.Column="1" VerticalAlignment="Center">
                                    <TextBlock.Text>
                                        <MultiBinding StringFormat="{}{0}{1}">
                                            <Binding Path="HomeInventoryInfo.Sum" />
                                            <Binding Path="Home.CurrencySymbol" />
                                        </MultiBinding>
                                    </TextBlock.Text>
                                </TextBlock>
                            </Grid>
                        </GroupBox>
                        <!--buttons-->
                        <Grid Grid.Row="4">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="100"/>
                                <ColumnDefinition/>
                                <ColumnDefinition Width="50"/>
                            </Grid.ColumnDefinitions>
                            <ComboBox VerticalAlignment="Center" ItemsSource="{Binding HomeInventoryConfig.Tasks}" SelectedIndex="{Binding HomeInventoryConfig.TasksId}"
                                      SelectionChanged="inventComboBox_SelectionChanged" x:Name="invenTasks"/>
                            <TextBlock Grid.Column="1" Margin="10" Text="{Binding HomeInventoryInfo.Count, StringFormat='Count: {0}'}" VerticalAlignment="Center"/>
                            <Button Grid.Row="0" Grid.Column="2" HorizontalAlignment="Right"
                                    Style="{StaticResource MaterialDesignFlatButton}"
                                    Command="{Binding InventoryTaskCommand}"
                                    CommandParameter="{Binding HomeInventoryConfig}">
                                <materialDesign:PackIcon Kind="{Binding HomeInventoryInfo.IsService, Converter={StaticResource BooleanToPlayButtonConverter}}"/>
                            </Button>
                            <ProgressBar Grid.ColumnSpan="3" VerticalAlignment="Bottom" Height="3"
                                         Style="{StaticResource MaterialDesignLinearProgressBar}"
                                         Maximum="{Binding HomeInventoryInfo.MaxProgress}"
                                         Value="{Binding HomeInventoryInfo.Progress}"/>
                        </Grid>
                    </Grid>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</UserControl>