<Window x:Class="ItemChecker.MVVM.View.StartWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ItemChecker.MVVM.View"
        xmlns:viewmodel="clr-namespace:ItemChecker.MVVM.ViewModel"
        xmlns:customConverter="clr-namespace:ItemChecker.Converter"
        mc:Ignorable="d"
        x:Name="Window"
        Title="ItemChecker"
        Width="500" Height="370"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        d:DataContext="{d:DesignInstance Type=viewmodel:StartUpViewModel}"
        Background="{DynamicResource Background}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Normal" KeyDown="Window_KeyDown"
        FontFamily="{materialDesign:MaterialDesignFont}"
        WindowStartupLocation="CenterScreen" WindowStyle="None" ResizeMode="NoResize">
    <Window.Resources>
        <ControlTemplate x:Key="ValidError"/>
        <customConverter:BooleanReverseConverter x:Key="BooleanReverseConverter"/>
    </Window.Resources>
    <Border BorderBrush="DimGray" BorderThickness="0.5">
        <Grid>
            <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <!--background-->
            <Path Grid.RowSpan="2" Width="500" Height="370" MouseLeftButtonDown="Window_DragMove">
                <Path.Data>
                    <PathGeometry>
                        <PathFigure IsClosed="True" StartPoint="0,0">
                            <LineSegment Point="500,0" />
                            <LineSegment Point="500,70" />
                            <BezierSegment Point1="450,130" Point2="400,80" Point3="350,160"/>
                            <BezierSegment Point1="300,210" Point2="250,160" Point3="200,240"/>
                            <BezierSegment Point1="150,290" Point2="100,240" Point3="50,320"/>
                            <BezierSegment Point1="0,370" Point2="0,320" Point3="0,370"/>
                        </PathFigure>
                    </PathGeometry>
                </Path.Data>
                <Path.Fill>
                    <LinearGradientBrush>
                        <GradientStop Color="#FF80CAFF"/>
                        <GradientStop Color="#FF108CD3" Offset="1"/>
                        <GradientStop Color="#FF464646" Offset="10"/>
                    </LinearGradientBrush>
                </Path.Fill>
            </Path>
            <!--Title-->
            <StackPanel Grid.Row="0" Height="25" HorizontalAlignment="Right" Orientation="Horizontal" Grid.Column="1">
                <Button Height="25" Style="{DynamicResource MaterialDesignFlatButton}"
                        Click="Reset_Click" ToolTip="Reset"
                        Visibility="{Binding StartUp.IsReset, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <materialDesign:PackIcon Kind="FileRefreshOutline" Foreground="White"/>
                </Button>
                <Button Height="25" Style="{DynamicResource MaterialDesignFlatButton}"
                        Click="Close_Click">
                    <materialDesign:PackIcon Kind="Close" Foreground="White"/>
                </Button>
            </StackPanel>
            <!--body-->
            <Grid Grid.Row="1">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="220"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <!--Logo-->
                <Grid Grid.Column="0" MouseLeftButtonDown="Window_DragMove">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="85"/>
                        <RowDefinition/>
                        <RowDefinition/>
                    </Grid.RowDefinitions>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="90"/>
                        <ColumnDefinition/>
                    </Grid.ColumnDefinitions>
                    <Image Grid.Column="0" Width="80"
                           HorizontalAlignment="Center"
                           Source="../../Resources/logo-white.png"/>
                    <TextBlock Text="ItemChecker" Grid.Column="1" Foreground="White" HorizontalAlignment="Left"
                               VerticalAlignment="top" FontSize="20" Margin="0 15 0 0"/>
                    <!--Status-->
                    <Border Grid.Column="1" VerticalAlignment="Bottom" Opacity="1.0" Margin="0 0 0 20">
                        <TextBlock x:Name="PointsStatus" FontSize="14" Text="{Binding StartUp.Progress.Item2, NotifyOnTargetUpdated=True, Mode=OneWay}" Foreground="White">
                            <TextBlock.Triggers>
                                <EventTrigger RoutedEvent="Binding.TargetUpdated">
                                    <BeginStoryboard>
                                        <Storyboard>
                                            <DoubleAnimation Storyboard.TargetName="PointsStatus" To="1.0" Storyboard.TargetProperty="Opacity" Duration="0:0:0.5" />
                                            <ThicknessAnimation Storyboard.TargetName="PointsStatus" From="0 -25 0 0" To="0 0 0 0" Storyboard.TargetProperty="Margin" Duration="0:0:0.5" />
                                        </Storyboard>
                                    </BeginStoryboard>
                                </EventTrigger>
                            </TextBlock.Triggers>
                        </TextBlock>
                    </Border>
                    
                    <TextBlock Grid.Row="1" Grid.Column="0" HorizontalAlignment="Left" VerticalAlignment="Bottom"
                               Text="© 2018-2023 baht0" Grid.ColumnSpan="2" Margin="15 0 0 0"
                               FontSize="11" Foreground="White"/>
                    <TextBlock Grid.Row="2" Grid.Column="0" HorizontalAlignment="Left"
                               Text="{Binding StartUp.Version, StringFormat='Version: {0}'}"
                                Grid.ColumnSpan="2"  Margin="15 0 0 0"
                               FontSize="10" Foreground="White"/>
                </Grid>
                <!--Login-->
                <Grid Grid.Column="1" VerticalAlignment="Center" HorizontalAlignment="Center"
                      Visibility="{Binding StartUp.IsSignInShow, Converter={StaticResource BooleanToVisibilityConverter}}">
                    <Rectangle Width="235" Height="160" Fill="{DynamicResource Background}" RadiusX="12" RadiusY="12">
                        <Rectangle.Effect>
                            <DropShadowEffect Color="DarkGray" Direction="360" BlurRadius="15"
                                              RenderingBias="Quality" ShadowDepth="1"/>
                        </Rectangle.Effect>
                    </Rectangle>
                    <Grid Width="200" Height="135" Margin="0 -10 0 0">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="15"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="Steam" FontSize="15" Grid.ColumnSpan="2" FontWeight="Bold"
                               HorizontalAlignment="Center" VerticalAlignment="Top"/>
                        <!--IsSubmit-->
                        <Grid Grid.Row="1" Visibility="{Binding StartUp.IsSubmitShow, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="Account Name:" VerticalAlignment="Bottom"/>
                            <TextBox Grid.Row="1" FontSize="13" VerticalAlignment="Center" IsEnabled="{Binding StartUp.IsSubmitEnabled}"
                                     Text="{Binding SignInData.AccountName, UpdateSourceTrigger=PropertyChanged}"/>
                            <TextBlock Text="Password:" Grid.Row="2" VerticalAlignment="Bottom"/>
                            <PasswordBox x:Name="passTextbox" Grid.Row="3" FontSize="13" VerticalAlignment="Center" KeyDown="passTextbox_KeyDown"
                                         IsEnabled="{Binding StartUp.IsSubmitEnabled}"/>

                            <TextBlock Text="Invalid account name or password." Grid.Row="4" VerticalAlignment="Center" Foreground="Red" FontStyle="Italic"
                                       Visibility="{Binding StartUp.IsErrorShow, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                            <Button Content="Sign In" Grid.Row="5" Width="100" Margin="0 0 0 -32" HorizontalAlignment="Center" VerticalAlignment="Bottom" IsEnabled="{Binding StartUp.IsSubmitEnabled}"
                                    Command="{Binding SignInCommand}" CommandParameter="{Binding ElementName=passTextbox}" Style="{StaticResource MaterialDesignRaisedButton}"/>
                        </Grid>
                        <!--IsConfirmation-->
                        <Grid Grid.Row="1" Visibility="{Binding StartUp.IsConfirmationShow, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition Height="20"/>
                                <RowDefinition/>
                                <RowDefinition Height="15"/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="Use the Steam Mobile App to confirm your sign in..." TextWrapping="Wrap" VerticalAlignment="Center"/>
                            <TextBlock Text="Or enter the code instead:" Grid.Row="1" VerticalAlignment="Bottom"/>
                            <TextBox Grid.Row="2" VerticalAlignment="Center" MaxLength="5" FontSize="20" x:Name="code2FA"
                                     TextAlignment="Center" CharacterCasing="Upper" FontWeight="Bold" FontFamily="Consolas"
                                     TextChanged="code2FA_TextChanged" Text="{Binding SignInData.Code2AF, UpdateSourceTrigger=PropertyChanged}"
                                     IsEnabled="{Binding StartUp.IsCodeEnabled}"/>
                            <TextBlock Text="Invalid Code2FA." Grid.Row="3" VerticalAlignment="Bottom" Foreground="Red" FontStyle="Italic"
                                       Visibility="{Binding StartUp.IsErrorShow, Converter={StaticResource BooleanToVisibilityConverter}}"/>
                        </Grid>
                        <!--IsExpired-->
                        <Grid Grid.Row="1" Visibility="{Binding StartUp.IsExpiredShow, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition Height="50"/>
                            </Grid.RowDefinitions>
                            <TextBlock Text="The sign in request has expired." Grid.Row="0" VerticalAlignment="Bottom" FontSize="14"/>
                            <TextBlock Text="Restart to login." Grid.Row="1" HorizontalAlignment="Center" VerticalAlignment="Center" FontSize="14"/>
                            <Button Content="Exit" Grid.Row="2" Width="100"  VerticalAlignment="Bottom" Click="Exit_Click"/>
                        </Grid>
                        <!--IsCurrency-->
                        <Grid Grid.Row="1" Visibility="{Binding StartUp.IsCurrencyShow, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition/>
                                <RowDefinition/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <TextBlock VerticalAlignment="Center" TextWrapping="Wrap"
                                       Text="You must select the currency of your steam&#160;">
                                <Hyperlink NavigateUri="https://store.steampowered.com/account/" RequestNavigate="Hyperlink_RequestNavigate"
                                           Foreground="#FF607D8B">account.</Hyperlink>
                            </TextBlock>
                            <StackPanel Grid.Row="1" Orientation="Horizontal" VerticalAlignment="Top">
                                <TextBlock Text="Currency:" VerticalAlignment="Center" Margin="0 0 10 0"/>
                                <ComboBox Height="25" FontSize="13" Width="138" VerticalAlignment="Center"
                                          ItemsSource="{Binding StartUp.CurrencyList}" SelectedItem="{Binding StartUp.SelectedCurrency}">
                                    <ComboBox.ItemTemplate>
                                        <DataTemplate>
                                            <TextBlock Text="{Binding Name}"/>
                                        </DataTemplate>
                                    </ComboBox.ItemTemplate>
                                </ComboBox>
                            </StackPanel>
                            <TextBlock Grid.Row="2" VerticalAlignment="Top" FontStyle="Italic"
                                       Text="Learn more about supported&#x0a;">
                                <Hyperlink NavigateUri="https://partner.steamgames.com/doc/store/pricing/currencies" RequestNavigate="Hyperlink_RequestNavigate"
                                           Foreground="#FF607D8B">currencies.</Hyperlink>
                            </TextBlock>

                            <Button Content="Continue" Grid.ColumnSpan="2" Grid.Row="5"
                                Width="100" Margin="0 0 0 -32" HorizontalAlignment="Center"  VerticalAlignment="Bottom"
                                Command="{Binding SelectCurrencyCommand}" CommandParameter="{Binding StartUp.SelectedCurrency}"/>
                        </Grid>
                    </Grid>
                </Grid>
            </Grid>
            <materialDesign:Snackbar Grid.Row="1" MessageQueue="{Binding StartUp.Message}"/>
            <ProgressBar Grid.Row="1" VerticalAlignment="Bottom"
                         Style="{DynamicResource MaterialDesignLinearProgressBar}"
                         Maximum="5"
                         Value="{Binding StartUp.Progress.Item1, Mode=OneWay}"/>
        </Grid>
    </Border>
</Window>