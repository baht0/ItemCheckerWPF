<Window x:Class="ItemChecker.MVVM.View.ShowListWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:ItemChecker.MVVM.View"
        xmlns:viewmodel="clr-namespace:ItemChecker.MVVM.ViewModel"
        xmlns:customConverter="clr-namespace:ItemChecker.Converter"
        mc:Ignorable="d"
        Title="Show List" Height="550" Width="650"
        x:Name="showListWindow"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        d:DataContext="{d:DesignInstance Type=viewmodel:ShowListViewModel}"
        Background="{DynamicResource Background}"
        TextElement.Foreground="{DynamicResource MaterialDesignBody}"
        TextElement.FontWeight="Normal"
        FontFamily="{materialDesign:MaterialDesignFont}"
        WindowStartupLocation="CenterScreen"
        WindowStyle="None" ResizeMode="NoResize">
    <Window.Resources>
        <ControlTemplate x:Key="ValidError"/>
        <customConverter:BooleanToYesNoConverter x:Key="BooleanToYesNoConverter"/>
        <customConverter:ServiceIdToServiceNameConverter x:Key="ServiceIdToServiceNameConverter"/>
    </Window.Resources>
    <Border BorderBrush="Gray" BorderThickness="0.5">
        <Grid Margin="10 0 10 10">
            <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
                <RowDefinition/>
                <RowDefinition Height="60"/>
            </Grid.RowDefinitions>
            <Grid Background="{DynamicResource WindowTopBackground}" Margin="-10 0 -10 0"/>
            <Grid Grid.Row="0" MouseLeftButtonDown="Window_DragMove" Background="Transparent">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <TextBlock Text="Show List" VerticalAlignment="Center" />
                <Button Grid.Column="1" Margin="0 0 -10 0" Height="25" HorizontalAlignment="Right" Click="Button_Close"
                        Style="{StaticResource MaterialDesignFlatButton}">
                    <materialDesign:PackIcon Kind="Close"/>
                </Button>
            </Grid>
            <Grid Grid.Row="1">
                <Grid.RowDefinitions>
                    <RowDefinition Height="40"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <materialDesign:ColorZone Background="Transparent" Grid.Row="0">
                    <StackPanel Orientation="Horizontal" Margin="2" HorizontalAlignment="Center">
                        <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}" x:Name="reserveTab" Width="315" Margin="1" Content="Reserve" IsChecked="{Binding SavedItems.IsReserve}"/>
                        <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}" x:Name="rareTab" Width="315" Margin="1" Content="Rare" IsChecked="{Binding SavedItems.IsRare}"/>
                    </StackPanel>
                </materialDesign:ColorZone>
                <Border Grid.Row="1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Margin="5">
                    <Grid>
                        <DataGrid Grid.Row="1" Grid.ColumnSpan="3" AlternationCount="2" AlternatingRowBackground="{DynamicResource ElementBackground}"
                                  AutoGenerateColumns="False" x:Name="reserveGrid" KeyDown="reserveGrid_KeyDown"
                                  ItemsSource="{Binding SavedItems.List, UpdateSourceTrigger=PropertyChanged}" SelectionMode="Single"
                                  SelectedItem="{Binding SavedItems.SelectedItem}" ToolTip="Press 'Backspace' to remove item"
                                  IsReadOnly="True" CanUserReorderColumns="False" CanUserResizeRows="False" CanUserResizeColumns="False">
                            <DataGrid.Columns>
                                <DataGridTextColumn Binding="{Binding ItemName}" CanUserResize="False" MinWidth="350" Width="auto">
                                    <DataGridTextColumn.Header>
                                        <TextBlock Text="{Binding DataContext.SavedItems.List.Count, RelativeSource={RelativeSource AncestorType=Window}, StringFormat='Item: {0}'}"/>
                                    </DataGridTextColumn.Header>
                                </DataGridTextColumn>
                                <DataGridTextColumn Header="Service" CanUserResize="False" MaxWidth="150" Width="auto"
                                                    Binding="{Binding ServiceId, Converter={StaticResource ServiceIdToServiceNameConverter}, ConverterParameter={x:Reference services}}"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </Border>
            </Grid>
            <GroupBox Header="Actions" Grid.Row="2" Grid.ColumnSpan="3" Style="{DynamicResource none}" BorderThickness="0.5">
                <Grid Margin="5">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="110"/>
                        <ColumnDefinition Width="10"/>
                        <ColumnDefinition/>
                        <ColumnDefinition Width="25"/>
                        <ColumnDefinition Width="25"/>
                    </Grid.ColumnDefinitions>
                    <ComboBox Grid.Column="0" x:Name="services" ItemsSource="{Binding SavedItems.Services}" SelectedIndex="{Binding SavedItems.ServiceId}"/>
                    <TextBox Grid.Column="2" VerticalAlignment="Center" ToolTip="Item Name" x:Name="itemName"/>
                    <Button Grid.Column="3" VerticalAlignment="Center" HorizontalAlignment="Right" Style="{StaticResource MaterialDesignToolForegroundButton}"
                            Command="{Binding AddCommand}" CommandParameter="{Binding ElementName=itemName, Path=Text}">
                        <materialDesign:PackIcon Kind="Plus"/>
                    </Button>
                    <Button Grid.Column="4" VerticalAlignment="Center" HorizontalAlignment="Right" Style="{StaticResource MaterialDesignToolForegroundButton}"
                            Command="{Binding ClearCommand}">
                        <materialDesign:PackIcon Kind="Delete"/>
                    </Button>
                </Grid>
            </GroupBox>
            <materialDesign:Snackbar Grid.Row="1" MessageQueue="{Binding Message}"/>
        </Grid>
    </Border>
</Window>
