<UserControl x:Class="ItemChecker.MVVM.View.ParserView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ItemChecker.MVVM.View"
             mc:Ignorable="d"
             xmlns:viewmodel="clr-namespace:ItemChecker.MVVM.ViewModel"
             xmlns:customConverter="clr-namespace:ItemChecker.Converter"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             d:DataContext="{d:DesignInstance Type=viewmodel:ParserViewModel}"
             FontFamily="{materialDesign:MaterialDesignFont}"
             d:DesignHeight="660" d:DesignWidth="1280">
    <UserControl.Resources>
        <ControlTemplate x:Key="ValidError"/>
        <customConverter:DateTimeConverter x:Key="DateTimeConverter"/>
        <customConverter:BooleanToYesNoConverter x:Key="BooleanToYesNoConverter"/>
        <customConverter:BooleanToPlayButtonConverter x:Key="BooleanToPlayButtonConverter"/>
        <Storyboard x:Key="MenuOpen">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="FilterGrid">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="300"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="MenuClose">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="FilterGrid">
                <EasingDoubleKeyFrame KeyTime="0" Value="300"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="OpenFilter">
            <BeginStoryboard Storyboard="{StaticResource MenuOpen}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ApplyFilter">
            <BeginStoryboard Storyboard="{StaticResource MenuClose}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ResetFilter">
            <BeginStoryboard Storyboard="{StaticResource MenuClose}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="CloseFilter">
            <BeginStoryboard Storyboard="{StaticResource MenuClose}"/>
        </EventTrigger>
    </UserControl.Triggers>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="250"/>
        </Grid.ColumnDefinitions>
        <!--bodY-->
        <Grid Grid.Column="0" Margin="0 0 10 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
                <RowDefinition/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>
            <!--table-->
            <TextBlock Grid.Row="0" VerticalAlignment="Center"
                       Text="{Binding ParserTable.Count, StringFormat='Parser: {0}'}"
                       FontWeight="Normal" FontStyle="Normal" FontSize="18" TextDecorations="{x:Null}"/>
            <ComboBox VerticalAlignment="Center" ToolTip="Displaying prices in tables"
                      Width="70" HorizontalAlignment="Right" x:Name="currency"
                      ItemsSource="{Binding ParserTable.CurrencyList}"
                      SelectedIndex="{Binding ParserTable.CurrencyId}"
                      SelectionChanged="currency_SelectionChanged"/>
            <DataGrid Grid.Row="1" x:Name="parserGrid" AlternationCount="2" AlternatingRowBackground="{DynamicResource ElementBackground}"
                      AutoGenerateColumns="False" IsReadOnly="True"
                      ItemsSource="{Binding ParserTable.GridView, UpdateSourceTrigger=PropertyChanged}"
                      SelectedItem="{Binding SelectedItem}"
                      KeyDown="DataGrid_KeyDown" MouseDoubleClick="DataGrid_MouseDoubleClick"
                      ToolTip="Press 'Insert' to add to queue&#x0a;Press 'F' to add to favorites&#x0a;Press 'F+Ctrl' to remove from favorites">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding ItemName}" CanUserResize="False" Width="auto" MaxWidth="400" MinWidth="320">
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{Binding DataContext.ParserTable.GridView.Count, RelativeSource={RelativeSource AncestorType=UserControl}, StringFormat='Item: {0}'}"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Price1}" CanUserResize="False" Width="auto">
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{Binding DataContext.ParserTable.Price1, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Price2}" CanUserResize="False" Width="auto">
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{Binding DataContext.ParserTable.Price2, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Price3}" CanUserResize="False" Width="auto">
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{Binding DataContext.ParserTable.Price3, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Binding="{Binding Price4}" CanUserResize="False" Width="auto">
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{Binding DataContext.ParserTable.Price4, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Precent" Binding="{Binding Precent}" CanUserResize="False" Width="auto"/>
                    <DataGridTextColumn Header="Differece" Binding="{Binding Difference}" CanUserResize="False" Width="auto" MaxWidth="110"/>
                </DataGrid.Columns>
            </DataGrid>
            <!--search-->
            <Grid Grid.Row="2" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="75"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" x:Name="OpenFilter" Style="{StaticResource MaterialDesignToolForegroundButton}">
                    <materialDesign:PackIcon Kind="FormatListBulleted"/>
                </Button>
                <TextBlock Grid.Column="1" Text="Search Item:" VerticalAlignment="Center"/>
                <TextBox Grid.Column="2" VerticalAlignment="Center" x:Name="SearchTxt" Text="{Binding SearchString}" KeyDown="TextBox_KeyDown"/>
                <Button Grid.Column="3" Command="{Binding ClearSearchCommand}" Style="{StaticResource MaterialDesignToolForegroundButton}">
                    <materialDesign:PackIcon Kind="Close"/>
                </Button>
            </Grid>
            <!--filter-->
            <Border x:Name="FilterGrid" HorizontalAlignment="Left" Grid.RowSpan="4" Margin="-20 0 0 0"
                    Width="0" Background="{DynamicResource ElementBackground}"
                    BorderBrush="LightSlateGray" BorderThickness="0.5">
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="600"/>
                        <RowDefinition Height="*"/>
                    </Grid.RowDefinitions>
                    <Grid DataContext="{Binding FilterConfig, UpdateSourceTrigger=PropertyChanged}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="117"/>
                            <RowDefinition Height="132"/>
                            <RowDefinition Height="132"/>
                            <RowDefinition Height="112"/>
                            <RowDefinition Height="70"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <GroupBox Header="Category:" Grid.Row="0" Grid.Column="0"
                              Style="{DynamicResource None}">
                            <Grid Margin="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <CheckBox Grid.Row="0" Content="Normal" IsChecked="{Binding Normal}"/>
                                <CheckBox Grid.Row="1" Content="StatTrak™" IsChecked="{Binding Stattrak}"/>
                                <CheckBox Grid.Row="2" Content="Souvenir" IsChecked="{Binding Souvenir}"/>
                                <CheckBox Grid.Row="3" Content="★" IsChecked="{Binding KnifeGlove}"/>
                                <CheckBox Grid.Row="4" Content="★ StatTrak™" IsChecked="{Binding KnifeGloveStattrak}"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="Other:" Grid.Row="0" Grid.Column="1"
                              Style="{DynamicResource None}">
                            <Grid Margin="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <CheckBox Grid.Row="0" Content="Is on sale STM" IsChecked="{Binding Have}"
                                          IsEnabled="{Binding DataContext.ParserInfo.ST, RelativeSource={RelativeSource AncestorType=UserControl}}"/>
                                <TextBlock Grid.Row="1" Text="Weapon:" VerticalAlignment="Center"/>
                                <ComboBox Grid.Row="3" VerticalAlignment="Top" ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                          ItemsSource="{Binding Weapons}" SelectedItem="{Binding SelectedWeapon}"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="Exterior:" Grid.Row="1" Grid.Column="0"
                              Style="{DynamicResource None}">
                            <Grid Margin="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <CheckBox Grid.Row="0" Content="Not Painted" IsChecked="{Binding NotPainted}"/>
                                <CheckBox Grid.Row="1" Content="Battle-Scarred" IsChecked="{Binding BattleScarred}"/>
                                <CheckBox Grid.Row="2" Content="Well-Worn" IsChecked="{Binding WellWorn}"/>
                                <CheckBox Grid.Row="3" Content="Field-Tested" IsChecked="{Binding FieldTested}"/>
                                <CheckBox Grid.Row="4" Content="Minimal Wear" IsChecked="{Binding MinimalWear}"/>
                                <CheckBox Grid.Row="5" Content="Factory New" IsChecked="{Binding FactoryNew}"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="Quality:" Grid.Row="1" Grid.Column="1"
                              Style="{DynamicResource None}">
                            <Grid Margin="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <CheckBox Grid.Row="0" Content="Industrial" IsChecked="{Binding Industrial}" Foreground="#FF5E98D9"/>
                                <CheckBox Grid.Row="1" Content="Mil-Spec" IsChecked="{Binding MilSpec}" Foreground="#FF4B69FF"/>
                                <CheckBox Grid.Row="2" Content="Restricted"  IsChecked="{Binding Restricted}" Foreground="#FF8847FF"/>
                                <CheckBox Grid.Row="3" Content="Classified" IsChecked="{Binding Classified}" Foreground="#FFD32CE6"/>
                                <CheckBox Grid.Row="4" Content="Covert" IsChecked="{Binding Covert}" Foreground="#FFEB4B4B"/>
                                <CheckBox Grid.Row="5" Content="Contraband" IsChecked="{Binding Contraband}" Foreground="#FFE4AE39"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="Types:" Grid.Row="2" Grid.ColumnSpan="2"
                              Style="{DynamicResource None}">
                            <Grid Margin="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <CheckBox Grid.Row="0" Grid.Column="0" Content="Weapon" IsChecked="{Binding Weapon}"/>
                                <CheckBox Grid.Row="1" Grid.Column="0" Content="Knife" IsChecked="{Binding Knife}"/>
                                <CheckBox Grid.Row="2" Grid.Column="0" Content="Gloves" IsChecked="{Binding Gloves}"/>
                                <CheckBox Grid.Row="3" Grid.Column="0" Content="Agent" IsChecked="{Binding Agent}"/>
                                <CheckBox Grid.Row="4" Grid.Column="0" Content="Music Kit" IsChecked="{Binding MusicKit}"/>
                                <CheckBox Grid.Row="5" Grid.Column="0" Content="Collectible" IsChecked="{Binding Collectible}"/>

                                <CheckBox Grid.Row="0" Grid.Column="1" Content="Sticker" IsChecked="{Binding Sticker}"/>
                                <CheckBox Grid.Row="1" Grid.Column="1" Content="Patch" IsChecked="{Binding Patch}"/>
                                <CheckBox Grid.Row="2" Grid.Column="1" Content="Graffiti" IsChecked="{Binding Graffiti}"/>
                                <CheckBox Grid.Row="3" Grid.Column="1" Content="Pass" IsChecked="{Binding Pass}"/>
                                <CheckBox Grid.Row="4" Grid.Column="1" Content="Key" IsChecked="{Binding Key}"/>
                                
                                <CheckBox Grid.Row="0" Grid.Column="2" Content="Case" IsChecked="{Binding Case}"/>
                                <CheckBox Grid.Row="1" Grid.Column="2" Content="Capsule" IsChecked="{Binding Capsule}"/>
                                <CheckBox Grid.Row="2" Grid.Column="2" Content="Package" IsChecked="{Binding Package}"/>
                                <CheckBox Grid.Row="3" Grid.Column="2" Content="Patch Pack" IsChecked="{Binding PatchPack}"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="Prices:" Grid.Row="3" Grid.ColumnSpan="2"
                              Style="{DynamicResource None}">
                            <Grid Margin="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="120"/>
                                    <ColumnDefinition Width="65"/>
                                    <ColumnDefinition Width="15"/>
                                    <ColumnDefinition Width="65"/>
                                </Grid.ColumnDefinitions>
                                <CheckBox Grid.Row="0" Grid.Column="0"
                                          Content="{Binding DataContext.ParserTable.Price1, RelativeSource={RelativeSource AncestorType=UserControl}}" 
                                          IsChecked="{Binding Price1}"/>
                                <CheckBox Grid.Row="1" Grid.Column="0" 
                                          Content="{Binding DataContext.ParserTable.Price2, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                          IsChecked="{Binding Price2}"/>
                                <CheckBox Grid.Row="2" Grid.Column="0" 
                                          Content="{Binding DataContext.ParserTable.Price3, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                          IsChecked="{Binding Price3}"/>
                                <CheckBox Grid.Row="3" Grid.Column="0" 
                                          Content="{Binding DataContext.ParserTable.Price4, RelativeSource={RelativeSource AncestorType=UserControl}}"
                                          IsChecked="{Binding Price4}"/>

                                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Price1From}" TextInput="InputDecimal" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Price2From}" TextInput="InputDecimal" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                                <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Price3From}" TextInput="InputDecimal" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                                <TextBox Grid.Row="3" Grid.Column="1" Text="{Binding Price4From}" TextInput="InputDecimal" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>

                                <TextBlock Grid.Row="0" Grid.Column="2" Text="-" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                <TextBlock Grid.Row="1" Grid.Column="2" Text="-" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                <TextBlock Grid.Row="2" Grid.Column="2" Text="-" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                <TextBlock Grid.Row="3" Grid.Column="2" Text="-" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                                <TextBox Grid.Row="0" Grid.Column="3" Text="{Binding Price1To}" TextInput="InputDecimal" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                                <TextBox Grid.Row="1" Grid.Column="3" Text="{Binding Price2To}" TextInput="InputDecimal" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                                <TextBox Grid.Row="2" Grid.Column="3" Text="{Binding Price3To}" TextInput="InputDecimal" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                                <TextBox Grid.Row="3" Grid.Column="3" Text="{Binding Price4To}" TextInput="InputDecimal" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="Profit:" Grid.Row="4" Grid.ColumnSpan="2"
                              Style="{DynamicResource None}">
                            <Grid Margin="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="120"/>
                                    <ColumnDefinition Width="65"/>
                                    <ColumnDefinition Width="15"/>
                                    <ColumnDefinition Width="65"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Row="0" Grid.Column="0" Text="Precent" VerticalAlignment="Center"/>
                                <TextBlock Grid.Row="1" Grid.Column="0" Text="Difference" VerticalAlignment="Center"/>

                                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding PrecentFrom}" TextInput="InputDecimal" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding DifferenceFrom}" TextInput="InputDecimal" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                                <TextBlock Grid.Row="0" Grid.Column="2" Text="-" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                <TextBlock Grid.Row="1" Grid.Column="2" Text="-" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                                <TextBox Grid.Row="0" Grid.Column="3" Text="{Binding PrecentTo}" TextInput="InputDecimal" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                                <TextBox Grid.Row="1" Grid.Column="3" Text="{Binding DifferenceTo}" TextInput="InputDecimal" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                            </Grid>
                        </GroupBox>
                    </Grid>
                    <Button Grid.Row="1" Style="{StaticResource MaterialDesignToolForegroundButton}"
                            HorizontalAlignment="Left" VerticalAlignment="Bottom"
                            Margin="20 0 0 0" x:Name="CloseFilter">
                        <materialDesign:PackIcon Kind="ArrowLeft"/>
                    </Button>                    
                    <StackPanel Grid.Row="1" Orientation="Horizontal"
                                VerticalAlignment="Bottom" HorizontalAlignment="Right">
                        <Button Style="{StaticResource MaterialDesignFlatButton}"
                                HorizontalAlignment="Right" VerticalAlignment="Bottom"
                                Command="{Binding ResetCommand}"
                                x:Name="ResetFilter">
                            <TextBlock Text="Reset"/>
                        </Button>
                        <Button Style="{StaticResource MaterialDesignFlatButton}"
                                HorizontalAlignment="Right" VerticalAlignment="Bottom"
                                Command="{Binding ApplyCommand}"
                                CommandParameter="{Binding FilterConfig}"
                                x:Name="ApplyFilter">
                            <TextBlock Text="Apply"/>
                        </Button>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>
        <!--panel-->
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <materialDesign:ColorZone Background="Transparent">
                    <StackPanel Orientation="Horizontal" Margin="2" HorizontalAlignment="Center">
                        <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}" x:Name="checkTab" Margin="2" Content="Check" IsChecked="True"/>
                        <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}" x:Name="infoTab" Margin="2" Content="Info"/>
                        <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}" x:Name="queueTab" Margin="2" Content="Queue"/>
                    </StackPanel>
            </materialDesign:ColorZone>
            <Border Grid.Row="1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Margin="10">
                <Grid>
                    <!--check-->
                    <Grid Visibility="{Binding IsChecked, ElementName=checkTab, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition/>
                            <RowDefinition Height="32"/>
                            <RowDefinition Height="32"/>
                        </Grid.RowDefinitions>
                        <!--config-->
                        <Grid Grid.Row="0">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="32"/>
                                <RowDefinition Height="160"/>
                                <RowDefinition Height="60"/>
                                <RowDefinition Height="140"/>
                            </Grid.RowDefinitions>
                            <TextBlock VerticalAlignment="Center" FontWeight="Bold"
                                       Text="{Binding ParserCheckInfo.CountList, StringFormat='Generated list: {0}'}"/>
                            <Separator VerticalAlignment="Bottom"/>
                            <GroupBox Grid.Row="1" Style="{DynamicResource none}" BorderThickness="0">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="40"/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="Price:" VerticalAlignment="Center" ToolTip="For Service 1"/>
                                    <VirtualizingStackPanel Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                                        <TextBox Width="60" Height="23" Text="{Binding ParserCheckConfig.MinPrice}" TextInput="NumberPlus_PreviewTextInput" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                                        <TextBlock Margin="8 0 8 0" Text="-" VerticalAlignment="Center"/>
                                        <TextBox Width="60" Height="23" Text="{Binding ParserCheckConfig.MaxPrice}" TextInput="NumberPlus_PreviewTextInput" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                                        <TextBlock Grid.Column="4" Text="$" VerticalAlignment="Center"/>
                                    </VirtualizingStackPanel>
                                    <CheckBox Grid.Row="1" Grid.Column="0" x:Name="Normal"
                                              IsChecked="{Binding ParserCheckConfig.Normal}"
                                              Content="Normal"/>
                                    <CheckBox Grid.Row="1" Grid.Column="1" x:Name="NotWeapon"
                                              IsChecked="{Binding ParserCheckConfig.NotWeapon}"
                                              Content="Not Weapon" ToolTip="Stickers, graffiti, agents, music kit, etc."/>
                                    <CheckBox Grid.Row="2" Grid.Column="0" x:Name="Souvenir"
                                              IsChecked="{Binding ParserCheckConfig.Souvenir}"
                                              Content="Souvenir"/>
                                    <CheckBox Grid.Row="2" Grid.Column="1" x:Name="Stattrak"
                                              IsChecked="{Binding ParserCheckConfig.Stattrak}"
                                              Content="StatTrak™"/>
                                    <CheckBox Grid.Row="3" Grid.Column="0" x:Name="KnifeGlove"
                                              IsChecked="{Binding ParserCheckConfig.KnifeGlove}"
                                              Content="★"/>
                                    <CheckBox Grid.Row="3" Grid.Column="1" x:Name="KnifeGloveStattrak"
                                              IsChecked="{Binding ParserCheckConfig.KnifeGloveStattrak}"
                                              Content="★ StatTrak™"/>
                                    <TextBlock Grid.Row="4" Grid.Column="0" Text="Items Only:" VerticalAlignment="Center"/>
                                    <ComboBox Grid.Row="4" Grid.Column="1" ItemsSource="{Binding ParserCheckConfig.OnlyList}" SelectedIndex="{Binding ParserCheckConfig.SelectedOnly}"/>
                                </Grid>
                            </GroupBox>
                            <GroupBox Grid.Row="2" Style="{DynamicResource none}" BorderThickness="0" x:Name="csmGroup">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <CheckBox Grid.Row="0" Grid.Column="0"
                                              IsChecked="{Binding ParserCheckConfig.WithoutLock}"
                                              Content="WithoutLock"
                                              ToolTip="Show only without trade lock items"/>
                                    <CheckBox Grid.Row="0" Grid.Column="1"
                                              IsChecked="{Binding ParserCheckConfig.UserItems}"
                                              Content="UserItems"
                                              ToolTip="Allow users items"/>
                                    <CheckBox Grid.Row="1" Grid.Column="0"
                                              IsChecked="{Binding ParserCheckConfig.RareItems}"
                                              Content="RareItems"
                                              ToolTip="Allow rare items"/>
                                </Grid>
                            </GroupBox>
                            <!--info-->
                            <GroupBox Grid.Row="3" Style="{DynamicResource none}" Header="Information:" BorderThickness="0.5"
                                      Visibility="{Binding ParserCheckInfo.IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Grid Margin="5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="90"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="From:" Grid.Row="0" VerticalAlignment="Center"/>
                                    <TextBlock Text="{Binding ParserCheckInfo.Service1}" Grid.Row="0" Grid.Column="1" VerticalAlignment="Center"/>
                                    <TextBlock Text="To:" Grid.Row="1" VerticalAlignment="Center"/>
                                    <TextBlock Text="{Binding ParserCheckInfo.Service2}" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center"/>
                                    <TextBlock Text="Mode:" Grid.Row="2" VerticalAlignment="Center"/>
                                    <TextBlock Text="{Binding ParserCheckInfo.Mode}" Grid.Row="2" Grid.Column="1" VerticalAlignment="Center"/>
                                    <TextBlock Text="Checked:" Grid.Row="3" VerticalAlignment="Center"/>
                                    <TextBlock Text="{Binding ParserCheckInfo.DateTime, StringFormat='{}{0:dd MMM hh:mm}'}" Grid.Row="3" Grid.Column="2" VerticalAlignment="Center"/>
                                </Grid>
                            </GroupBox>
                        </Grid>
                        <!--services-->
                        <VirtualizingStackPanel Grid.Row="1"
                                    Orientation="Horizontal"
                                    HorizontalAlignment="Center"
                                    VerticalAlignment="Bottom">
                            <ComboBox Width="105" Height="25" SelectionChanged="ComboBoxSer1_SelectionChanged"
                                      ItemsSource="{Binding ParserCheckConfig.Services}" x:Name="service1"
                                      SelectedIndex="{Binding ParserCheckConfig.ServiceOne}"/>
                            <TextBlock VerticalAlignment="Center" Margin="5"/>
                            <ComboBox Width="105" Height="25"
                                      ItemsSource="{Binding ParserCheckConfig.Services}"
                                      SelectedIndex="{Binding ParserCheckConfig.ServiceTwo}"/>
                        </VirtualizingStackPanel>
                        <!--buttons-->
                        <Grid Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <VirtualizingStackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                                <Button ToolTip="Import Table from *.json" VerticalAlignment="Center"
                                        Style="{StaticResource MaterialDesignToolForegroundButton}"
                                        Command="{Binding ImportCommand}">
                                    <materialDesign:PackIcon Kind="Upload"/>
                                </Button>
                                <TextBlock Text="{Binding ParserCheckInfo.Status}" 
                                           Visibility="{Binding ParserCheckInfo.TimerOn, Converter={StaticResource BooleanToVisibilityConverter}}" 
                                           Margin="5 0 0 0" VerticalAlignment="Center" FontSize="12"/>
                            </VirtualizingStackPanel>                            
                            <VirtualizingStackPanel Orientation="Horizontal" HorizontalAlignment="Right"
                                                    Grid.Column="2">
                                <Button Style="{StaticResource MaterialDesignFlatButton}"
                                        Command="{Binding ContinueCheckCommand}"
                                        ToolTip="Continue checking">
                                    <materialDesign:PackIcon Kind="Replay"/>
                                </Button>
                                <Button Style="{StaticResource MaterialDesignFlatButton}"
                                        Command="{Binding CheckCommand}"
                                        CommandParameter="{Binding ParserCheckConfig}">
                                    <materialDesign:PackIcon Kind="{Binding ParserCheckInfo.IsParser, Converter={StaticResource BooleanToPlayButtonConverter}}"/>
                                </Button>
                            </VirtualizingStackPanel>
                            <ProgressBar Grid.ColumnSpan="3" VerticalAlignment="Bottom"
                                         Height="3" Style="{StaticResource MaterialDesignLinearProgressBar}"
                                         Value="{Binding ParserCheckInfo.CurrentProgress}"
                                         Maximum="{Binding ParserCheckInfo.MaxProgress}"/>
                        </Grid>
                    </Grid>
                    <!--info-->
                    <Grid Visibility="{Binding IsChecked, ElementName=infoTab, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="32"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="Item Informations" VerticalAlignment="Center" FontWeight="Bold"/>
                        <Button ToolTip="Update service inventory"
                                        Style="{StaticResource MaterialDesignToolForegroundButton}" HorizontalAlignment="Right"
                                        Command="{Binding UpdateInventoryCommand}">
                            <materialDesign:PackIcon Kind="Reload"/>
                        </Button>
                        <Separator VerticalAlignment="Bottom"/>
                        <!--ST-->
                        <Grid Grid.Row="1"
                              Visibility="{Binding DataContext.ParserInfo.ST, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="45"/>
                                <RowDefinition Height="20"/>
                                <RowDefinition Height="20"/>
                                <RowDefinition Height="45"/>
                                <RowDefinition/>
                                <RowDefinition Height="20"/>
                                <RowDefinition Height="20"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" VerticalAlignment="Center" TextWrapping="Wrap"
                                       Text="{Binding StringFormat=Item: {0}, Path=ParserInfo.ItemName}"/>
                            <TextBlock Grid.Row="1" VerticalAlignment="Center">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="LowestSellOrder: {0}{1}">
                                        <Binding Path="ParserInfo.ItemSt.LowestSellOrder" />
                                        <Binding Path="ParserTable.CurrencySymbol" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                            <TextBlock Grid.Row="2" VerticalAlignment="Center">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="HighestBuyOrder: {0}{1}">
                                        <Binding Path="ParserInfo.ItemSt.HighestBuyOrder" />
                                        <Binding Path="ParserTable.CurrencySymbol" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                            <TextBlock Grid.Row="3" VerticalAlignment="Bottom">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="LastSale: {0:dd MMM yyyy} | {1} DaysAgo &#x0a;Price: {2}{3}">
                                        <Binding Path="ParserInfo.ItemSt.LastSale.Item1" />
                                        <Binding Path="ParserInfo.ItemSt.LastSale.Item2" />
                                        <Binding Path="ParserInfo.ItemSt.LastSale.Item3" />
                                        <Binding Path="ParserTable.CurrencySymbolSteam" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                            <DataGrid Grid.Row="4" ItemsSource="{Binding ParserInfo.ItemSt.PriceHistory}" FontSize="11"
                                      AlternationCount="2" AlternatingRowBackground="{DynamicResource ElementBackground}"
                                      AutoGenerateColumns="False" IsReadOnly="True">
                                <DataGrid.Columns>
                                    <DataGridTextColumn Header="Date" CanUserResize="False"
                                                        Binding="{Binding Date, StringFormat='{}{0:dd MMM yyyy}'}"
                                                        MaxWidth="100"/>
                                    <DataGridTextColumn Header="Price" CanUserResize="False" Binding="{Binding Price}"
                                                        Width="Auto"/>
                                    <DataGridTextColumn Header="Count" Width="auto" CanUserResize="False" Binding="{Binding Count}"/>
                                </DataGrid.Columns>
                            </DataGrid>
                            <TextBlock Grid.Row="5" VerticalAlignment="Center" FontStyle="Italic">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="Last 30 days Avg ({0}): {1}{2}">
                                        <Binding Path="ParserInfo.ItemSt.Count30" />
                                        <Binding Path="ParserInfo.ItemSt.Avg30" />
                                        <Binding Path="ParserTable.CurrencySymbolSteam" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                            <TextBlock Grid.Row="6" VerticalAlignment="Center" FontStyle="Italic">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="Last 60 days Avg ({0}): {1}{2}">
                                        <Binding Path="ParserInfo.ItemSt.Count60" />
                                        <Binding Path="ParserInfo.ItemSt.Avg60" />
                                        <Binding Path="ParserTable.CurrencySymbolSteam" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Grid>
                        <!--CSM-->
                        <Grid Grid.Row="1" DataContext="{Binding ParserInfo}"
                                  Visibility="{Binding DataContext.ParserInfo.CSM, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50"/>
                                <RowDefinition Height="25"/>
                                <RowDefinition Height="25"/>
                                <RowDefinition Height="45"/>
                                <RowDefinition Height="250"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" VerticalAlignment="Center" TextWrapping="Wrap"
                                           Text="{Binding ItemCsm.ItemName, StringFormat='Item: {0}'}"/>
                            <TextBlock Grid.Row="1" VerticalAlignment="Center"
                                           Text="{Binding ItemCsm.DefaultPrice, StringFormat='Default Price: {0}$'}"/>
                            <TextBlock Grid.Row="2" VerticalAlignment="Center"
                                           Text="{Binding ItemCsmComparePrice, StringFormat='Compare Price: {0}'}"/>
                            <Slider Grid.Row="3" Width="200" VerticalAlignment="Center"
                                        Maximum="{Binding InfoItemCount}"
                                        Value="{Binding InfoItemCurrent}"/>
                            <Border Grid.Row="4" Background="{DynamicResource ElementBackground}">
                                <Grid Margin="10" DataContext="{Binding ItemCsm}">
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="70"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Row="0" Text="Stack Size:" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding StackSize}" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="1" Text="Price:" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Price, StringFormat='{}{0}$'}" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="2" Text="Stickers:" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding Sticker, Converter={StaticResource BooleanToYesNoConverter}}" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="3" Text="Float:" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding Float}" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="4" Text="UserItem:" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="4" Grid.Column="1" Text="{Binding User, Converter={StaticResource BooleanToYesNoConverter}}" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="5" Text="RareItem:" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="5" Grid.Column="1" Text="{Binding RareItem, Converter={StaticResource BooleanToYesNoConverter}}" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="6" Text="TradeLock:" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="6" Grid.Column="1" Text="{Binding TradeLock, Converter={StaticResource DateTimeConverter}}" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                        </Grid>
                        <!--LF-->
                        <Grid Grid.Row="1"
                                  Visibility="{Binding DataContext.ParserInfo.LF, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50"/>
                                <RowDefinition Height="210"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" VerticalAlignment="Center" TextWrapping="Wrap"
                                           Text="{Binding ParserInfo.ItemName, StringFormat='Item: {0}'}"/>
                            <Border Grid.Row="2" DataContext="{Binding ParserInfo.ItemLf}" Background="{DynamicResource ElementBackground}">
                                <Grid Margin="10" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Row="0" Text="Have:" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Have}" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="1" Text="Price:" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Price, StringFormat='{}{0}$'}" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="2" Text="Tradable:" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding Tradable}" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="3" Text="Reservable:" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding Reservable}" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="4" Text="Limit:" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="4" Grid.Column="1" Text="{Binding Limit}" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="5" Text="Steam price rate:" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="5" Grid.Column="1" Text="{Binding SteamPriceRate}" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                        </Grid>
                        <!--BF-->
                        <Grid Grid.Row="1"
                                  Visibility="{Binding DataContext.ParserInfo.BF, RelativeSource={RelativeSource AncestorType=UserControl}, Converter={StaticResource BooleanToVisibilityConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="50"/>
                                <RowDefinition Height="150"/>
                            </Grid.RowDefinitions>
                            <TextBlock Grid.Row="0" VerticalAlignment="Center" TextWrapping="Wrap"
                                           Text="{Binding ParserInfo.ItemName, StringFormat='Item: {0}'}"/>
                            <Border Grid.Row="2" DataContext="{Binding ParserInfo.ItemBf}" Background="{DynamicResource ElementBackground}">
                                <Grid Margin="10" >
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Grid.Row="0" Text="Price:" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="0" Grid.Column="1" Text="{Binding Price, StringFormat='{}{0}$'}" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="1" Text="Sell:" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="1" Grid.Column="1" Text="{Binding Count}" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="2" Text="BuyOrder:" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="2" Grid.Column="1" Text="{Binding BuyOrder, StringFormat='{}{0}$'}" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="3" Text="OrderCount:" VerticalAlignment="Center"/>
                                    <TextBlock Grid.Row="3" Grid.Column="1" Text="{Binding OrderCount}" VerticalAlignment="Center"/>
                                </Grid>
                            </Border>
                        </Grid>
                    </Grid>
                    <!--queue-->
                    <Grid Visibility="{Binding IsChecked, ElementName=queueTab, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="32"/>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="25"/>
                            <RowDefinition Height="25"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="110"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <TextBlock Grid.ColumnSpan="2" VerticalAlignment="Center" FontWeight="Bold"
                                   Text="{Binding ParserQueue.Items.Count, StringFormat='Place Order: {0}'}"/>
                        <Button Grid.Column="1" HorizontalAlignment="Right" VerticalAlignment="Bottom" Style="{StaticResource MaterialDesignFlatButton}"
                                Command="{Binding PlaceOrderCommand}">
                            <materialDesign:PackIcon Kind="Play"/>
                        </Button>
                        <ProgressBar Grid.ColumnSpan="2" VerticalAlignment="Bottom" Height="3" Style="{StaticResource MaterialDesignLinearProgressBar}"
                                     Value="{Binding ParserQueue.CurrentProgress}"
                                     Maximum="{Binding ParserQueue.MaxProgress}"/>
                        <TextBlock Grid.Row="1" Grid.Column="0" Text="Total Allowed:" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="1" Grid.Column="1" VerticalAlignment="Center">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0}{1}">
                                    <Binding Path="ParserQueue.TotalAllowed" />
                                    <Binding Path="ParserTable.CurrencySymbolSteam" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <TextBlock Grid.Row="2" Grid.Column="0" Text="{Binding ParserQueue.AvailableAmountPrecent, StringFormat='Available ({0}%):'}" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="2" Grid.Column="1" VerticalAlignment="Center">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0}{1}">
                                    <Binding Path="ParserQueue.AvailableAmount" />
                                    <Binding Path="ParserTable.CurrencySymbolSteam" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <TextBlock Grid.Row="3" Grid.Column="0" Text="Orders:" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="3" Grid.Column="1" VerticalAlignment="Center">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0}{1}">
                                    <Binding Path="ParserQueue.OrderAmout" />
                                    <Binding Path="ParserTable.CurrencySymbolSteam" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>
                        <TextBlock Grid.Row="4" Grid.Column="0" Text="Remaining:" VerticalAlignment="Center"/>
                        <TextBlock Grid.Row="4" Grid.Column="1" VerticalAlignment="Center">
                            <TextBlock.Text>
                                <MultiBinding StringFormat="{}{0}{1}">
                                    <Binding Path="ParserQueue.Remaining" />
                                    <Binding Path="ParserTable.CurrencySymbolSteam" />
                                </MultiBinding>
                            </TextBlock.Text>
                        </TextBlock>                       
                        <Button Grid.Row="5" Grid.Column="0" HorizontalAlignment="Left" Style="{StaticResource MaterialDesignToolForegroundButton}"
                                        Command="{Binding RemoveQueueCommand}"
                                        CommandParameter="{Binding ParserQueue.SelectedQueue}">
                            <materialDesign:PackIcon Kind="Minus"/>
                        </Button>
                        <Button Grid.Row="5" Grid.Column="1" HorizontalAlignment="Right" Style="{StaticResource MaterialDesignToolForegroundButton}"
                                        Command="{Binding ClearQueueCommand}">
                            <materialDesign:PackIcon Kind="Remove"/>
                        </Button>
                        <DataGrid Grid.Row="6" FontSize="11" Grid.ColumnSpan="2"
                                  ItemsSource="{Binding ParserQueue.Items}" SelectedItem="{Binding ParserQueue.SelectedQueue}"
                                  AlternationCount="2" AlternatingRowBackground="{DynamicResource ElementBackground}"
                                  AutoGenerateColumns="False" IsReadOnly="True">
                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Item" CanUserResize="False"
                                                    Binding="{Binding ItemName}"
                                                    Width="Auto"/>
                                <DataGridTextColumn Header="Price" CanUserResize="False"
                                                    Binding="{Binding OrderPrice}"
                                                    Width="Auto"/>
                                <DataGridTextColumn Header="Precent" CanUserResize="False"
                                                    Binding="{Binding Precent}"
                                                    Width="Auto"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</UserControl>