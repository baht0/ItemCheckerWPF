<UserControl x:Class="ItemChecker.MVVM.View.ParserView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ItemChecker.MVVM.View"
             mc:Ignorable="d"
             xmlns:viewmodel="clr-namespace:ItemChecker.MVVM.ViewModel"
             xmlns:customConverter="clr-namespace:ItemChecker.Converter"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             d:DataContext="{d:DesignInstance Type=viewmodel:ParserViewModel}"
             FontFamily="{materialDesign:MaterialDesignFont}"
             d:DesignHeight="660" d:DesignWidth="1280">
    <UserControl.Resources>
        <ControlTemplate x:Key="ValidError"/>
        <customConverter:BooleanToYesNoConverter x:Key="BooleanToYesNoConverter"/>
        <customConverter:BooleanToPlayButtonConverter x:Key="BooleanToPlayButtonConverter"/>
        <customConverter:IntToVisibilityConverter x:Key="IntToVisibilityConverter"/>
        <Storyboard x:Key="MenuOpen">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="FilterGrid">
                <EasingDoubleKeyFrame KeyTime="0" Value="0"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="300"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
        <Storyboard x:Key="MenuClose">
            <DoubleAnimationUsingKeyFrames Storyboard.TargetProperty="(FrameworkElement.Width)" Storyboard.TargetName="FilterGrid">
                <EasingDoubleKeyFrame KeyTime="0" Value="300"/>
                <EasingDoubleKeyFrame KeyTime="0:0:0.1" Value="0"/>
            </DoubleAnimationUsingKeyFrames>
        </Storyboard>
    </UserControl.Resources>
    <UserControl.Triggers>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="OpenFilter">
            <BeginStoryboard Storyboard="{StaticResource MenuOpen}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ApplyFilter">
            <BeginStoryboard Storyboard="{StaticResource MenuClose}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="ResetFilter">
            <BeginStoryboard Storyboard="{StaticResource MenuClose}"/>
        </EventTrigger>
        <EventTrigger RoutedEvent="ButtonBase.Click" SourceName="CloseFilter">
            <BeginStoryboard Storyboard="{StaticResource MenuClose}"/>
        </EventTrigger>
    </UserControl.Triggers>
    <Grid>
        <Grid.ColumnDefinitions>
            <ColumnDefinition/>
            <ColumnDefinition Width="250"/>
        </Grid.ColumnDefinitions>
        <!--bodY-->
        <Grid Grid.Column="0" Margin="0 0 10 0">
            <Grid.RowDefinitions>
                <RowDefinition Height="25"/>
                <RowDefinition/>
                <RowDefinition Height="40"/>
            </Grid.RowDefinitions>
            <!--table-->
            <TextBlock Grid.Row="0" VerticalAlignment="Center"
                       Text="{Binding DataGridParse.Count, StringFormat='Parser: {0}'}"
                       FontWeight="Normal" FontStyle="Normal" FontSize="18" TextDecorations="{x:Null}"/>
            <ComboBox VerticalAlignment="Center" ToolTip="Displaying prices in tables" Width="70" HorizontalAlignment="Right" x:Name="currency"
                      ItemsSource="{Binding Parser.CurrencyList}" SelectedIndex="{Binding Parser.CurrencyId}"
                      SelectionChanged="currency_SelectionChanged"/>
            <DataGrid Grid.Row="1" x:Name="parserGrid" AlternationCount="2" AlternatingRowBackground="{DynamicResource ElementBackground}"
                      AutoGenerateColumns="False" SelectionMode="Single" KeyDown="DataGrid_KeyDown" MouseDoubleClick="DataGrid_MouseDoubleClick"
                      ItemsSource="{Binding DataGridParse.GridView, UpdateSourceTrigger=PropertyChanged}" SelectedItem="{Binding DataGridParse.SelectedItem}"
                      ToolTip="{Binding ToolParser.TableToolTip}"
                      IsReadOnly="True" CanUserReorderColumns="False" CanUserResizeRows="False" CanUserResizeColumns="False">
                <DataGrid.Columns>
                    <DataGridTextColumn Binding="{Binding ItemName}" CanUserResize="False" Width="auto" MaxWidth="500" MinWidth="420">
                        <DataGridTextColumn.Header>
                            <TextBlock Text="{Binding DataContext.DataGridParse.GridView.Count, RelativeSource={RelativeSource AncestorType=UserControl}, StringFormat='Item: {0}'}"/>
                        </DataGridTextColumn.Header>
                    </DataGridTextColumn>
                    <DataGridTextColumn Header="Purchase" Binding="{Binding Purchase}" CanUserResize="False" Width="auto" FontWeight="Bold"/>
                    <DataGridTextColumn Header="Price" Binding="{Binding Price}" CanUserResize="False" Width="auto"/>
                    <DataGridTextColumn Header="Get" Binding="{Binding Get}" CanUserResize="False" Width="auto"/>
                    <DataGridTextColumn Header="Precent" Binding="{Binding Precent, StringFormat='{}{0}%'}" CanUserResize="False" Width="auto" FontWeight="Bold"/>
                    <DataGridTextColumn Header="Difference" Binding="{Binding Difference}" CanUserResize="False" Width="auto" MaxWidth="110"/>
                </DataGrid.Columns>
            </DataGrid>
            <!--search-->
            <Grid Grid.Row="2" VerticalAlignment="Center">
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="30"/>
                    <ColumnDefinition Width="75"/>
                    <ColumnDefinition/>
                    <ColumnDefinition Width="30"/>
                </Grid.ColumnDefinitions>
                <Button Grid.Column="0" x:Name="OpenFilter" Style="{StaticResource MaterialDesignToolForegroundButton}">
                    <materialDesign:PackIcon Kind="Tune"/>
                </Button>
                <TextBlock Grid.Column="1" Text="Search Item:" VerticalAlignment="Center"/>
                <TextBox Grid.Column="2" VerticalAlignment="Center" x:Name="SearchTxt" Text="{Binding SearchString}" KeyDown="TextBox_KeyDown"/>
                <Button Grid.Column="3" Command="{Binding ClearSearchCommand}" Style="{StaticResource MaterialDesignToolForegroundButton}">
                    <materialDesign:PackIcon Kind="Clear"/>
                </Button>
            </Grid>
            <!--filter-->
            <Border x:Name="FilterGrid" HorizontalAlignment="Left" Grid.RowSpan="4" Margin="-15 0 0 0"
                    Width="0" Background="{DynamicResource ElementBackground}"
                    BorderBrush="LightSlateGray" BorderThickness="0.5">
                <Grid Margin="5">
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="35"/>
                    </Grid.RowDefinitions>
                    <Grid DataContext="{Binding ParserFilter, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Top">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="122"/>
                            <RowDefinition Height="132"/>
                            <RowDefinition Height="116"/>
                            <RowDefinition Height="95"/>
                            <RowDefinition Height="72"/>
                        </Grid.RowDefinitions>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <GroupBox Header="Category:" Grid.Row="0" Grid.Column="0"
                              Style="{DynamicResource None}" BorderThickness="0.5">
                            <Grid Margin="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <CheckBox Grid.Row="0" Content="Normal" IsChecked="{Binding Normal}"/>
                                <CheckBox Grid.Row="1" Content="StatTrak™" IsChecked="{Binding Stattrak}"/>
                                <CheckBox Grid.Row="2" Content="Souvenir" IsChecked="{Binding Souvenir}"/>
                                <CheckBox Grid.Row="3" Content="★" IsChecked="{Binding KnifeGlove}"/>
                                <CheckBox Grid.Row="4" Content="★ StatTrak™" IsChecked="{Binding KnifeGloveStattrak}"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="Other:" Grid.Row="0" Grid.Column="1"
                              Style="{DynamicResource None}" BorderThickness="0.5">
                            <Grid Margin="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <TextBlock Grid.Row="0" Text="Weapon:" VerticalAlignment="Center"/>
                                <ComboBox Grid.Row="1" VerticalAlignment="Top" ScrollViewer.VerticalScrollBarVisibility="Hidden"
                                          ItemsSource="{Binding Weapons}" SelectedItem="{Binding SelectedWeapon}"/>
                                <CheckBox Content="Hide placed" Grid.Row="2" IsChecked="{Binding HidePlaced}"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="Exterior:" Grid.Row="1" Grid.Column="0"
                              Style="{DynamicResource None}" BorderThickness="0.5">
                            <Grid Margin="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <CheckBox Grid.Row="0" Content="Not Painted" IsChecked="{Binding NotPainted}"/>
                                <CheckBox Grid.Row="1" Content="Battle-Scarred" IsChecked="{Binding BattleScarred}"/>
                                <CheckBox Grid.Row="2" Content="Well-Worn" IsChecked="{Binding WellWorn}"/>
                                <CheckBox Grid.Row="3" Content="Field-Tested" IsChecked="{Binding FieldTested}"/>
                                <CheckBox Grid.Row="4" Content="Minimal Wear" IsChecked="{Binding MinimalWear}"/>
                                <CheckBox Grid.Row="5" Content="Factory New" IsChecked="{Binding FactoryNew}"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="Quality:" Grid.Row="1" Grid.Column="1"
                              Style="{DynamicResource None}" BorderThickness="0.5">
                            <Grid Margin="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <CheckBox Grid.Row="0" Content="Industrial" IsChecked="{Binding Industrial}" Foreground="#FF5E98D9"/>
                                <CheckBox Grid.Row="1" Content="Mil-Spec" IsChecked="{Binding MilSpec}" Foreground="#FF4B69FF"/>
                                <CheckBox Grid.Row="2" Content="Restricted"  IsChecked="{Binding Restricted}" Foreground="#FF8847FF"/>
                                <CheckBox Grid.Row="3" Content="Classified" IsChecked="{Binding Classified}" Foreground="#FFD32CE6"/>
                                <CheckBox Grid.Row="4" Content="Covert" IsChecked="{Binding Covert}" Foreground="#FFEB4B4B"/>
                                <CheckBox Grid.Row="5" Content="Contraband" IsChecked="{Binding Contraband}" Foreground="#FFE4AE39"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="Types:" Grid.Row="2" Grid.ColumnSpan="2"
                              Style="{DynamicResource None}" BorderThickness="0.5">
                            <Grid Margin="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <CheckBox Grid.Row="0" Grid.Column="0" Content="Weapon" IsChecked="{Binding Weapon}"/>
                                <CheckBox Grid.Row="1" Grid.Column="0" Content="Knife" IsChecked="{Binding Knife}"/>
                                <CheckBox Grid.Row="2" Grid.Column="0" Content="Gloves" IsChecked="{Binding Gloves}"/>
                                <CheckBox Grid.Row="3" Grid.Column="0" Content="Agent" IsChecked="{Binding Agent}"/>
                                <CheckBox Grid.Row="4" Grid.Column="0" Content="Sticker" IsChecked="{Binding Sticker}"/>
                                
                                <CheckBox Grid.Row="0" Grid.Column="1" Content="Patch" IsChecked="{Binding Patch}"/>
                                <CheckBox Grid.Row="1" Grid.Column="1" Content="Collectible" IsChecked="{Binding Collectible}"/>
                                <CheckBox Grid.Row="2" Grid.Column="1" Content="Key" IsChecked="{Binding Key}"/>                                
                                <CheckBox Grid.Row="3" Grid.Column="1" Content="Pass" IsChecked="{Binding Pass}"/>                                
                                <CheckBox Grid.Row="4" Grid.Column="1" Content="Music Kit" IsChecked="{Binding MusicKit}"/>
                                
                                <CheckBox Grid.Row="0" Grid.Column="2" Content="Graffiti" IsChecked="{Binding Graffiti}"/>
                                <CheckBox Grid.Row="1" Grid.Column="2" Content="Container" IsChecked="{Binding Container}"/>
                                <CheckBox Grid.Row="2" Grid.Column="2" Content="Gift" IsChecked="{Binding Gift}"/>
                                <CheckBox Grid.Row="3" Grid.Column="2" Content="Tool" IsChecked="{Binding Tool}"/>                                
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="Prices:" Grid.Row="3" Grid.ColumnSpan="2"
                              Style="{DynamicResource None}" BorderThickness="0.5">
                            <Grid Margin="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="120"/>
                                    <ColumnDefinition Width="65"/>
                                    <ColumnDefinition Width="15"/>
                                    <ColumnDefinition Width="65"/>
                                </Grid.ColumnDefinitions>
                                <CheckBox Grid.Row="0" Grid.Column="0" Content="Purchase" IsChecked="{Binding Price1}"/>
                                <CheckBox Grid.Row="1" Grid.Column="0" Content="Price" IsChecked="{Binding Price2}"/>
                                <CheckBox Grid.Row="2" Grid.Column="0" Content="Get" IsChecked="{Binding Price3}"/>

                                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding Price1From}" TextInput="InputDecimal" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding Price2From}" TextInput="InputDecimal" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                                <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Price3From}" TextInput="InputDecimal" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>

                                <TextBlock Grid.Row="0" Grid.Column="2" Text="-" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                <TextBlock Grid.Row="1" Grid.Column="2" Text="-" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                <TextBlock Grid.Row="2" Grid.Column="2" Text="-" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                                <TextBox Grid.Row="0" Grid.Column="3" Text="{Binding Price1To}" TextInput="InputDecimal" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                                <TextBox Grid.Row="1" Grid.Column="3" Text="{Binding Price2To}" TextInput="InputDecimal" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                                <TextBox Grid.Row="2" Grid.Column="3" Text="{Binding Price3To}" TextInput="InputDecimal" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                            </Grid>
                        </GroupBox>
                        <GroupBox Header="Profit:" Grid.Row="4" Grid.ColumnSpan="2" Style="{DynamicResource None}" BorderThickness="0.5">
                            <Grid Margin="2">
                                <Grid.RowDefinitions>
                                    <RowDefinition/>
                                    <RowDefinition/>
                                </Grid.RowDefinitions>
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="120"/>
                                    <ColumnDefinition Width="65"/>
                                    <ColumnDefinition Width="15"/>
                                    <ColumnDefinition Width="65"/>
                                </Grid.ColumnDefinitions>
                                <TextBlock Grid.Row="0" Grid.Column="0" Text="Precent" VerticalAlignment="Center"/>
                                <TextBlock Grid.Row="1" Grid.Column="0" Text="Difference" VerticalAlignment="Center"/>

                                <TextBox Grid.Row="0" Grid.Column="1" Text="{Binding PrecentFrom}" TextInput="InputDecimal" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                                <TextBox Grid.Row="1" Grid.Column="1" Text="{Binding DifferenceFrom}" TextInput="InputDecimal" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                                <TextBlock Grid.Row="0" Grid.Column="2" Text="-" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                <TextBlock Grid.Row="1" Grid.Column="2" Text="-" VerticalAlignment="Center" HorizontalAlignment="Center"/>

                                <TextBox Grid.Row="0" Grid.Column="3" Text="{Binding PrecentTo}" TextInput="InputDecimal" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                                <TextBox Grid.Row="1" Grid.Column="3" Text="{Binding DifferenceTo}" TextInput="InputDecimal" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                            </Grid>
                        </GroupBox>
                    </Grid>
                    <Button Grid.Row="1" Style="{StaticResource MaterialDesignToolForegroundButton}"
                            HorizontalAlignment="Left" VerticalAlignment="Bottom"
                            Margin="20 0 0 0" x:Name="CloseFilter">
                        <materialDesign:PackIcon Kind="ArrowLeft"/>
                    </Button>                    
                    <StackPanel Grid.Row="1" Orientation="Horizontal"
                                VerticalAlignment="Bottom" HorizontalAlignment="Right">
                        <Button Style="{StaticResource MaterialDesignFlatButton}"
                                HorizontalAlignment="Right" VerticalAlignment="Bottom"
                                Command="{Binding ResetCommand}"
                                x:Name="ResetFilter">
                            <TextBlock Text="Reset"/>
                        </Button>
                        <Button Style="{StaticResource MaterialDesignFlatButton}"
                                HorizontalAlignment="Right" VerticalAlignment="Bottom"
                                Command="{Binding ApplyCommand}"
                                CommandParameter="{Binding FilterConfig}"
                                x:Name="ApplyFilter">
                            <TextBlock Text="Apply"/>
                        </Button>
                    </StackPanel>
                </Grid>
            </Border>
        </Grid>
        <!--panel-->
        <Grid Grid.Column="1">
            <Grid.RowDefinitions>
                <RowDefinition Height="40"/>
                <RowDefinition/>
            </Grid.RowDefinitions>
            <materialDesign:ColorZone Background="Transparent">
                    <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                    <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}" x:Name="checkTab" Width="124" Margin="1" Content="Check" IsChecked="True"/>
                    <RadioButton Style="{StaticResource MaterialDesignTabRadioButton}" x:Name="queueTab" Width="124" Margin="1" Content="Queue"/>
                    </StackPanel>
            </materialDesign:ColorZone>
            <Border Grid.Row="1" BorderBrush="{StaticResource PrimaryHueMidBrush}" Margin="5">
                <Grid>
                    <!--check-->
                    <Grid Visibility="{Binding IsChecked, ElementName=checkTab, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="32"/>
                            <RowDefinition/>
                            <RowDefinition Height="32"/>
                        </Grid.RowDefinitions>
                        <TextBlock Text="{Binding ToolParser.CountList, StringFormat='Generated list: {0}'}"
                                   VerticalAlignment="Center" FontWeight="Bold"/>
                        <Separator VerticalAlignment="Bottom"/>
                        <!--config-->
                        <Grid Grid.Row="1" IsEnabled="{Binding ToolParser.IsParser, Converter={StaticResource InvertBooleanConverter}}">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="115"/>
                                <RowDefinition Height="100"/>
                                <RowDefinition/>
                            </Grid.RowDefinitions>
                            <GroupBox Style="{DynamicResource none}" BorderThickness="0">
                                <Grid>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <TextBlock Text="Price:" VerticalAlignment="Center" ToolTip="For Service 1"/>
                                    <VirtualizingStackPanel Grid.ColumnSpan="2" Orientation="Horizontal" HorizontalAlignment="Right" VerticalAlignment="Center">
                                        <TextBox Width="60" Text="{Binding ToolParser.MinPrice}" VerticalAlignment="Center"
                                                  PreviewTextInput="InputInt" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                                        <TextBlock Margin="8 0 8 0" Text="-" VerticalAlignment="Center"/>
                                        <TextBox Width="60" Text="{Binding ToolParser.MaxPrice}" VerticalAlignment="Center" x:Name="maxPriceTxt"
                                                 PreviewTextInput="InputInt" Validation.ErrorTemplate="{StaticResource ResourceKey=ValidError}"/>
                                        <TextBlock Grid.Column="4" Text="$" VerticalAlignment="Center"/>
                                    </VirtualizingStackPanel>
                                    <Grid Grid.Row="1" Grid.ColumnSpan="2" x:Name="configGrid">
                                        <Grid.RowDefinitions>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                            <RowDefinition/>
                                        </Grid.RowDefinitions>
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                    </Grid>
                                </Grid>
                            </GroupBox>
                            <!--info-->
                            <GroupBox Grid.Row="1" Style="{DynamicResource none}" Header="Information:" BorderThickness="0.5"
                                      Visibility="{Binding ToolParser.IsVisible, Converter={StaticResource BooleanToVisibilityConverter}}">
                                <Grid Margin="5">
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="90"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                        <RowDefinition/>
                                    </Grid.RowDefinitions>
                                    <TextBlock Text="From:" Grid.Row="0" VerticalAlignment="Center"/>
                                    <TextBlock Text="{Binding ToolParser.Service1}" Grid.Row="0" Grid.Column="1" VerticalAlignment="Center"/>
                                    <TextBlock Text="To:" Grid.Row="1" VerticalAlignment="Center"/>
                                    <TextBlock Text="{Binding ToolParser.Service2}" Grid.Row="1" Grid.Column="1" VerticalAlignment="Center"/>
                                    <TextBlock Text="Checked:" Grid.Row="2" VerticalAlignment="Center"/>
                                    <TextBlock Text="{Binding ToolParser.DateTime, StringFormat='{}{0:dd MMM hh:mm tt}'}" Grid.Row="3" Grid.Column="2" VerticalAlignment="Center"/>
                                </Grid>
                            </GroupBox>
                            <!--services-->
                            <VirtualizingStackPanel Grid.Row="2" Orientation="Horizontal" HorizontalAlignment="Center" VerticalAlignment="Bottom">
                                <ComboBox Width="105" Height="25" SelectionChanged="ComboBoxSer1_SelectionChanged"
                                          ItemsSource="{Binding Parser.Services}" x:Name="service1"
                                          SelectedIndex="{Binding ToolParser.ServiceOne}"/>
                                <TextBlock VerticalAlignment="Center" Margin="5"/>
                                <ComboBox Width="105" Height="25" ItemsSource="{Binding Parser.Services}"
                                          SelectedIndex="{Binding ToolParser.ServiceTwo}"/>
                            </VirtualizingStackPanel>
                        </Grid>
                        <!--buttons-->
                        <Grid Grid.Row="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <VirtualizingStackPanel Orientation="Horizontal" HorizontalAlignment="Left" VerticalAlignment="Center">
                                <Button ToolTip="Import saved tables" VerticalAlignment="Center" Style="{StaticResource MaterialDesignToolForegroundButton}"
                                        Command="{Binding ImportCommand}">
                                    <materialDesign:PackIcon Kind="Upload"/>
                                </Button>
                                <TextBlock Text="{Binding ToolParser.StatusStr}" 
                                           Visibility="{Binding ToolParser.TimerOn, Converter={StaticResource BooleanToVisibilityConverter}}" 
                                           Margin="5 0 0 0" VerticalAlignment="Center" FontSize="12"/>
                            </VirtualizingStackPanel>
                            <VirtualizingStackPanel Orientation="Horizontal" HorizontalAlignment="Right"
                                                    Grid.Column="2">
                                <Button Style="{StaticResource MaterialDesignFlatButton}"
                                        Command="{Binding ContinueCheckCommand}"
                                        ToolTip="Continue checking">
                                    <materialDesign:PackIcon Kind="Replay"/>
                                </Button>
                                <Button Style="{StaticResource MaterialDesignFlatButton}"
                                        Command="{Binding CheckCommand}"
                                        CommandParameter="{Binding ToolParser}">
                                    <materialDesign:PackIcon Kind="{Binding ToolParser.IsParser, Converter={StaticResource BooleanToPlayButtonConverter}}"/>
                                </Button>
                            </VirtualizingStackPanel>
                            <ProgressBar Grid.ColumnSpan="3" VerticalAlignment="Bottom"
                                         Height="3" Style="{StaticResource MaterialDesignLinearProgressBar}"
                                         Value="{Binding ToolParser.CurrentProgress}"
                                         Maximum="{Binding ToolParser.MaxProgress}"/>
                        </Grid>
                    </Grid>
                    <!--queue-->
                    <Grid Visibility="{Binding IsChecked, ElementName=queueTab, Converter={StaticResource BooleanToVisibilityConverter}}">
                        <Grid.RowDefinitions>
                            <RowDefinition Height="32"/>
                            <RowDefinition Height="100"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <VirtualizingStackPanel Orientation="Horizontal">
                            <TextBlock VerticalAlignment="Center" FontWeight="Bold" Text="{Binding ToolPlaceOrder.Items.Count, StringFormat='Place Order: {0}'}"/>
                            <Button VerticalAlignment="Center" Style="{StaticResource MaterialDesignToolForegroundButton}"
                                        Command="{Binding ClearQueueCommand}">
                                <materialDesign:PackIcon Kind="Delete"/>
                            </Button>
                        </VirtualizingStackPanel>
                        <Button HorizontalAlignment="Right" VerticalAlignment="Bottom" Style="{StaticResource MaterialDesignFlatButton}"
                                Command="{Binding PlaceOrderCommand}">
                            <materialDesign:PackIcon Kind="Play"/>
                        </Button>
                        <ProgressBar VerticalAlignment="Bottom" Height="3" Style="{StaticResource MaterialDesignLinearProgressBar}"
                                     Value="{Binding ToolPlaceOrder.CurrentProgress}" Maximum="{Binding ToolPlaceOrder.MaxProgress}"/>
                        <!--info-->
                        <Grid Grid.Row="1">
                            <Grid.RowDefinitions>
                                <RowDefinition Height="25"/>
                                <RowDefinition Height="25"/>
                                <RowDefinition Height="25"/>
                                <RowDefinition Height="25"/>
                                <RowDefinition Height="25"/>
                            </Grid.RowDefinitions>
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="110"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Grid.Row="0" Grid.Column="0" Text="Total Allowed:" VerticalAlignment="Center"/>
                            <TextBlock Grid.Row="0" Grid.Column="1" VerticalAlignment="Center">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0}{1}">
                                        <Binding Path="ToolPlaceOrder.TotalAllowed" />
                                        <Binding Path="Parser.CurrencySteamSymbol" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                            <TextBlock Grid.Row="1" Grid.Column="0" Text="{Binding ToolPlaceOrder.AvailableAmountPrecent, StringFormat='Available ({0}%):'}" VerticalAlignment="Center"/>
                            <TextBlock Grid.Row="1" Grid.Column="1" VerticalAlignment="Center">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0}{1}">
                                        <Binding Path="ToolPlaceOrder.AvailableAmount" />
                                        <Binding Path="Parser.CurrencySteamSymbol" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                            <TextBlock Grid.Row="2" Grid.Column="0" Text="Remaining:" VerticalAlignment="Center"/>
                            <TextBlock Grid.Row="2" Grid.Column="1" VerticalAlignment="Center">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0}{1}">
                                        <Binding Path="ToolPlaceOrder.Remaining" />
                                        <Binding Path="Parser.CurrencySteamSymbol" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                            <TextBlock Grid.Row="3" Grid.Column="0" Text="Queue:" VerticalAlignment="Center"/>
                            <TextBlock Grid.Row="3" Grid.Column="1" VerticalAlignment="Center">
                                <TextBlock.Text>
                                    <MultiBinding StringFormat="{}{0}{1}">
                                        <Binding Path="ToolPlaceOrder.OrderAmout" />
                                        <Binding Path="Parser.CurrencySteamSymbol" />
                                    </MultiBinding>
                                </TextBlock.Text>
                            </TextBlock>
                        </Grid>
                        <!--table-->
                        <Grid Grid.Row="2">
                            <TextBlock Text="Nothing has been added yet." HorizontalAlignment="Center" VerticalAlignment="Center" FontStyle="Italic"/>
                        </Grid>
                        <ListBox Grid.Row="2" FontSize="11" SelectionMode="Single" ToolTip="Mouse double click to show item.&#x0a;Press 'Backspace' to remove item"
                                 x:Name="queueListBox" KeyDown="queueListBox_KeyDown" MouseDoubleClick="queueListBox_MouseDoubleClick"
                                  Visibility="{Binding ToolPlaceOrder.Items.Count, Converter={StaticResource IntToVisibilityConverter}}"
                                  ItemsSource="{Binding ToolPlaceOrder.Items}" SelectedItem="{Binding ToolPlaceOrder.SelectedItem}"
                                  AlternationCount="2" Background="{DynamicResource ElementBackground}">
                            <ListBox.ItemTemplate>
                                <DataTemplate>
                                    <TextBlock Text="{Binding ItemName}"/>
                                </DataTemplate>
                            </ListBox.ItemTemplate>
                        </ListBox>
                    </Grid>
                </Grid>
            </Border>
        </Grid>
    </Grid>
</UserControl>